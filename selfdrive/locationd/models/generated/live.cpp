#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7354899081148072319) {
   out_7354899081148072319[0] = 0;
   out_7354899081148072319[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7354899081148072319[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7354899081148072319[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7354899081148072319[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7354899081148072319[5] = -sin(in_vec[1]);
   out_7354899081148072319[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7354899081148072319[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7354899081148072319[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7354899081148072319[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7354899081148072319[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7354899081148072319[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7354899081148072319[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7354899081148072319[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7354899081148072319[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7354899081148072319[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7354899081148072319[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7354899081148072319[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_926748312842793590) {
   out_926748312842793590[0] = delta_x[0] + nom_x[0];
   out_926748312842793590[1] = delta_x[1] + nom_x[1];
   out_926748312842793590[2] = delta_x[2] + nom_x[2];
   out_926748312842793590[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_926748312842793590[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_926748312842793590[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_926748312842793590[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_926748312842793590[7] = delta_x[6] + nom_x[7];
   out_926748312842793590[8] = delta_x[7] + nom_x[8];
   out_926748312842793590[9] = delta_x[8] + nom_x[9];
   out_926748312842793590[10] = delta_x[9] + nom_x[10];
   out_926748312842793590[11] = delta_x[10] + nom_x[11];
   out_926748312842793590[12] = delta_x[11] + nom_x[12];
   out_926748312842793590[13] = delta_x[12] + nom_x[13];
   out_926748312842793590[14] = delta_x[13] + nom_x[14];
   out_926748312842793590[15] = delta_x[14] + nom_x[15];
   out_926748312842793590[16] = delta_x[15] + nom_x[16];
   out_926748312842793590[17] = delta_x[16] + nom_x[17];
   out_926748312842793590[18] = delta_x[17] + nom_x[18];
   out_926748312842793590[19] = delta_x[18] + nom_x[19];
   out_926748312842793590[20] = delta_x[19] + nom_x[20];
   out_926748312842793590[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8553861514595348833) {
   out_8553861514595348833[0] = -nom_x[0] + true_x[0];
   out_8553861514595348833[1] = -nom_x[1] + true_x[1];
   out_8553861514595348833[2] = -nom_x[2] + true_x[2];
   out_8553861514595348833[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8553861514595348833[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8553861514595348833[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8553861514595348833[6] = -nom_x[7] + true_x[7];
   out_8553861514595348833[7] = -nom_x[8] + true_x[8];
   out_8553861514595348833[8] = -nom_x[9] + true_x[9];
   out_8553861514595348833[9] = -nom_x[10] + true_x[10];
   out_8553861514595348833[10] = -nom_x[11] + true_x[11];
   out_8553861514595348833[11] = -nom_x[12] + true_x[12];
   out_8553861514595348833[12] = -nom_x[13] + true_x[13];
   out_8553861514595348833[13] = -nom_x[14] + true_x[14];
   out_8553861514595348833[14] = -nom_x[15] + true_x[15];
   out_8553861514595348833[15] = -nom_x[16] + true_x[16];
   out_8553861514595348833[16] = -nom_x[17] + true_x[17];
   out_8553861514595348833[17] = -nom_x[18] + true_x[18];
   out_8553861514595348833[18] = -nom_x[19] + true_x[19];
   out_8553861514595348833[19] = -nom_x[20] + true_x[20];
   out_8553861514595348833[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1090406756321095952) {
   out_1090406756321095952[0] = 1.0;
   out_1090406756321095952[1] = 0;
   out_1090406756321095952[2] = 0;
   out_1090406756321095952[3] = 0;
   out_1090406756321095952[4] = 0;
   out_1090406756321095952[5] = 0;
   out_1090406756321095952[6] = 0;
   out_1090406756321095952[7] = 0;
   out_1090406756321095952[8] = 0;
   out_1090406756321095952[9] = 0;
   out_1090406756321095952[10] = 0;
   out_1090406756321095952[11] = 0;
   out_1090406756321095952[12] = 0;
   out_1090406756321095952[13] = 0;
   out_1090406756321095952[14] = 0;
   out_1090406756321095952[15] = 0;
   out_1090406756321095952[16] = 0;
   out_1090406756321095952[17] = 0;
   out_1090406756321095952[18] = 0;
   out_1090406756321095952[19] = 0;
   out_1090406756321095952[20] = 0;
   out_1090406756321095952[21] = 0;
   out_1090406756321095952[22] = 1.0;
   out_1090406756321095952[23] = 0;
   out_1090406756321095952[24] = 0;
   out_1090406756321095952[25] = 0;
   out_1090406756321095952[26] = 0;
   out_1090406756321095952[27] = 0;
   out_1090406756321095952[28] = 0;
   out_1090406756321095952[29] = 0;
   out_1090406756321095952[30] = 0;
   out_1090406756321095952[31] = 0;
   out_1090406756321095952[32] = 0;
   out_1090406756321095952[33] = 0;
   out_1090406756321095952[34] = 0;
   out_1090406756321095952[35] = 0;
   out_1090406756321095952[36] = 0;
   out_1090406756321095952[37] = 0;
   out_1090406756321095952[38] = 0;
   out_1090406756321095952[39] = 0;
   out_1090406756321095952[40] = 0;
   out_1090406756321095952[41] = 0;
   out_1090406756321095952[42] = 0;
   out_1090406756321095952[43] = 0;
   out_1090406756321095952[44] = 1.0;
   out_1090406756321095952[45] = 0;
   out_1090406756321095952[46] = 0;
   out_1090406756321095952[47] = 0;
   out_1090406756321095952[48] = 0;
   out_1090406756321095952[49] = 0;
   out_1090406756321095952[50] = 0;
   out_1090406756321095952[51] = 0;
   out_1090406756321095952[52] = 0;
   out_1090406756321095952[53] = 0;
   out_1090406756321095952[54] = 0;
   out_1090406756321095952[55] = 0;
   out_1090406756321095952[56] = 0;
   out_1090406756321095952[57] = 0;
   out_1090406756321095952[58] = 0;
   out_1090406756321095952[59] = 0;
   out_1090406756321095952[60] = 0;
   out_1090406756321095952[61] = 0;
   out_1090406756321095952[62] = 0;
   out_1090406756321095952[63] = 0;
   out_1090406756321095952[64] = 0;
   out_1090406756321095952[65] = 0;
   out_1090406756321095952[66] = -0.5*state[4];
   out_1090406756321095952[67] = -0.5*state[5];
   out_1090406756321095952[68] = -0.5*state[6];
   out_1090406756321095952[69] = 0;
   out_1090406756321095952[70] = 0;
   out_1090406756321095952[71] = 0;
   out_1090406756321095952[72] = 0;
   out_1090406756321095952[73] = 0;
   out_1090406756321095952[74] = 0;
   out_1090406756321095952[75] = 0;
   out_1090406756321095952[76] = 0;
   out_1090406756321095952[77] = 0;
   out_1090406756321095952[78] = 0;
   out_1090406756321095952[79] = 0;
   out_1090406756321095952[80] = 0;
   out_1090406756321095952[81] = 0;
   out_1090406756321095952[82] = 0;
   out_1090406756321095952[83] = 0;
   out_1090406756321095952[84] = 0;
   out_1090406756321095952[85] = 0;
   out_1090406756321095952[86] = 0;
   out_1090406756321095952[87] = 0.5*state[3];
   out_1090406756321095952[88] = 0.5*state[6];
   out_1090406756321095952[89] = -0.5*state[5];
   out_1090406756321095952[90] = 0;
   out_1090406756321095952[91] = 0;
   out_1090406756321095952[92] = 0;
   out_1090406756321095952[93] = 0;
   out_1090406756321095952[94] = 0;
   out_1090406756321095952[95] = 0;
   out_1090406756321095952[96] = 0;
   out_1090406756321095952[97] = 0;
   out_1090406756321095952[98] = 0;
   out_1090406756321095952[99] = 0;
   out_1090406756321095952[100] = 0;
   out_1090406756321095952[101] = 0;
   out_1090406756321095952[102] = 0;
   out_1090406756321095952[103] = 0;
   out_1090406756321095952[104] = 0;
   out_1090406756321095952[105] = 0;
   out_1090406756321095952[106] = 0;
   out_1090406756321095952[107] = 0;
   out_1090406756321095952[108] = -0.5*state[6];
   out_1090406756321095952[109] = 0.5*state[3];
   out_1090406756321095952[110] = 0.5*state[4];
   out_1090406756321095952[111] = 0;
   out_1090406756321095952[112] = 0;
   out_1090406756321095952[113] = 0;
   out_1090406756321095952[114] = 0;
   out_1090406756321095952[115] = 0;
   out_1090406756321095952[116] = 0;
   out_1090406756321095952[117] = 0;
   out_1090406756321095952[118] = 0;
   out_1090406756321095952[119] = 0;
   out_1090406756321095952[120] = 0;
   out_1090406756321095952[121] = 0;
   out_1090406756321095952[122] = 0;
   out_1090406756321095952[123] = 0;
   out_1090406756321095952[124] = 0;
   out_1090406756321095952[125] = 0;
   out_1090406756321095952[126] = 0;
   out_1090406756321095952[127] = 0;
   out_1090406756321095952[128] = 0;
   out_1090406756321095952[129] = 0.5*state[5];
   out_1090406756321095952[130] = -0.5*state[4];
   out_1090406756321095952[131] = 0.5*state[3];
   out_1090406756321095952[132] = 0;
   out_1090406756321095952[133] = 0;
   out_1090406756321095952[134] = 0;
   out_1090406756321095952[135] = 0;
   out_1090406756321095952[136] = 0;
   out_1090406756321095952[137] = 0;
   out_1090406756321095952[138] = 0;
   out_1090406756321095952[139] = 0;
   out_1090406756321095952[140] = 0;
   out_1090406756321095952[141] = 0;
   out_1090406756321095952[142] = 0;
   out_1090406756321095952[143] = 0;
   out_1090406756321095952[144] = 0;
   out_1090406756321095952[145] = 0;
   out_1090406756321095952[146] = 0;
   out_1090406756321095952[147] = 0;
   out_1090406756321095952[148] = 0;
   out_1090406756321095952[149] = 0;
   out_1090406756321095952[150] = 0;
   out_1090406756321095952[151] = 0;
   out_1090406756321095952[152] = 0;
   out_1090406756321095952[153] = 1.0;
   out_1090406756321095952[154] = 0;
   out_1090406756321095952[155] = 0;
   out_1090406756321095952[156] = 0;
   out_1090406756321095952[157] = 0;
   out_1090406756321095952[158] = 0;
   out_1090406756321095952[159] = 0;
   out_1090406756321095952[160] = 0;
   out_1090406756321095952[161] = 0;
   out_1090406756321095952[162] = 0;
   out_1090406756321095952[163] = 0;
   out_1090406756321095952[164] = 0;
   out_1090406756321095952[165] = 0;
   out_1090406756321095952[166] = 0;
   out_1090406756321095952[167] = 0;
   out_1090406756321095952[168] = 0;
   out_1090406756321095952[169] = 0;
   out_1090406756321095952[170] = 0;
   out_1090406756321095952[171] = 0;
   out_1090406756321095952[172] = 0;
   out_1090406756321095952[173] = 0;
   out_1090406756321095952[174] = 0;
   out_1090406756321095952[175] = 1.0;
   out_1090406756321095952[176] = 0;
   out_1090406756321095952[177] = 0;
   out_1090406756321095952[178] = 0;
   out_1090406756321095952[179] = 0;
   out_1090406756321095952[180] = 0;
   out_1090406756321095952[181] = 0;
   out_1090406756321095952[182] = 0;
   out_1090406756321095952[183] = 0;
   out_1090406756321095952[184] = 0;
   out_1090406756321095952[185] = 0;
   out_1090406756321095952[186] = 0;
   out_1090406756321095952[187] = 0;
   out_1090406756321095952[188] = 0;
   out_1090406756321095952[189] = 0;
   out_1090406756321095952[190] = 0;
   out_1090406756321095952[191] = 0;
   out_1090406756321095952[192] = 0;
   out_1090406756321095952[193] = 0;
   out_1090406756321095952[194] = 0;
   out_1090406756321095952[195] = 0;
   out_1090406756321095952[196] = 0;
   out_1090406756321095952[197] = 1.0;
   out_1090406756321095952[198] = 0;
   out_1090406756321095952[199] = 0;
   out_1090406756321095952[200] = 0;
   out_1090406756321095952[201] = 0;
   out_1090406756321095952[202] = 0;
   out_1090406756321095952[203] = 0;
   out_1090406756321095952[204] = 0;
   out_1090406756321095952[205] = 0;
   out_1090406756321095952[206] = 0;
   out_1090406756321095952[207] = 0;
   out_1090406756321095952[208] = 0;
   out_1090406756321095952[209] = 0;
   out_1090406756321095952[210] = 0;
   out_1090406756321095952[211] = 0;
   out_1090406756321095952[212] = 0;
   out_1090406756321095952[213] = 0;
   out_1090406756321095952[214] = 0;
   out_1090406756321095952[215] = 0;
   out_1090406756321095952[216] = 0;
   out_1090406756321095952[217] = 0;
   out_1090406756321095952[218] = 0;
   out_1090406756321095952[219] = 1.0;
   out_1090406756321095952[220] = 0;
   out_1090406756321095952[221] = 0;
   out_1090406756321095952[222] = 0;
   out_1090406756321095952[223] = 0;
   out_1090406756321095952[224] = 0;
   out_1090406756321095952[225] = 0;
   out_1090406756321095952[226] = 0;
   out_1090406756321095952[227] = 0;
   out_1090406756321095952[228] = 0;
   out_1090406756321095952[229] = 0;
   out_1090406756321095952[230] = 0;
   out_1090406756321095952[231] = 0;
   out_1090406756321095952[232] = 0;
   out_1090406756321095952[233] = 0;
   out_1090406756321095952[234] = 0;
   out_1090406756321095952[235] = 0;
   out_1090406756321095952[236] = 0;
   out_1090406756321095952[237] = 0;
   out_1090406756321095952[238] = 0;
   out_1090406756321095952[239] = 0;
   out_1090406756321095952[240] = 0;
   out_1090406756321095952[241] = 1.0;
   out_1090406756321095952[242] = 0;
   out_1090406756321095952[243] = 0;
   out_1090406756321095952[244] = 0;
   out_1090406756321095952[245] = 0;
   out_1090406756321095952[246] = 0;
   out_1090406756321095952[247] = 0;
   out_1090406756321095952[248] = 0;
   out_1090406756321095952[249] = 0;
   out_1090406756321095952[250] = 0;
   out_1090406756321095952[251] = 0;
   out_1090406756321095952[252] = 0;
   out_1090406756321095952[253] = 0;
   out_1090406756321095952[254] = 0;
   out_1090406756321095952[255] = 0;
   out_1090406756321095952[256] = 0;
   out_1090406756321095952[257] = 0;
   out_1090406756321095952[258] = 0;
   out_1090406756321095952[259] = 0;
   out_1090406756321095952[260] = 0;
   out_1090406756321095952[261] = 0;
   out_1090406756321095952[262] = 0;
   out_1090406756321095952[263] = 1.0;
   out_1090406756321095952[264] = 0;
   out_1090406756321095952[265] = 0;
   out_1090406756321095952[266] = 0;
   out_1090406756321095952[267] = 0;
   out_1090406756321095952[268] = 0;
   out_1090406756321095952[269] = 0;
   out_1090406756321095952[270] = 0;
   out_1090406756321095952[271] = 0;
   out_1090406756321095952[272] = 0;
   out_1090406756321095952[273] = 0;
   out_1090406756321095952[274] = 0;
   out_1090406756321095952[275] = 0;
   out_1090406756321095952[276] = 0;
   out_1090406756321095952[277] = 0;
   out_1090406756321095952[278] = 0;
   out_1090406756321095952[279] = 0;
   out_1090406756321095952[280] = 0;
   out_1090406756321095952[281] = 0;
   out_1090406756321095952[282] = 0;
   out_1090406756321095952[283] = 0;
   out_1090406756321095952[284] = 0;
   out_1090406756321095952[285] = 1.0;
   out_1090406756321095952[286] = 0;
   out_1090406756321095952[287] = 0;
   out_1090406756321095952[288] = 0;
   out_1090406756321095952[289] = 0;
   out_1090406756321095952[290] = 0;
   out_1090406756321095952[291] = 0;
   out_1090406756321095952[292] = 0;
   out_1090406756321095952[293] = 0;
   out_1090406756321095952[294] = 0;
   out_1090406756321095952[295] = 0;
   out_1090406756321095952[296] = 0;
   out_1090406756321095952[297] = 0;
   out_1090406756321095952[298] = 0;
   out_1090406756321095952[299] = 0;
   out_1090406756321095952[300] = 0;
   out_1090406756321095952[301] = 0;
   out_1090406756321095952[302] = 0;
   out_1090406756321095952[303] = 0;
   out_1090406756321095952[304] = 0;
   out_1090406756321095952[305] = 0;
   out_1090406756321095952[306] = 0;
   out_1090406756321095952[307] = 1.0;
   out_1090406756321095952[308] = 0;
   out_1090406756321095952[309] = 0;
   out_1090406756321095952[310] = 0;
   out_1090406756321095952[311] = 0;
   out_1090406756321095952[312] = 0;
   out_1090406756321095952[313] = 0;
   out_1090406756321095952[314] = 0;
   out_1090406756321095952[315] = 0;
   out_1090406756321095952[316] = 0;
   out_1090406756321095952[317] = 0;
   out_1090406756321095952[318] = 0;
   out_1090406756321095952[319] = 0;
   out_1090406756321095952[320] = 0;
   out_1090406756321095952[321] = 0;
   out_1090406756321095952[322] = 0;
   out_1090406756321095952[323] = 0;
   out_1090406756321095952[324] = 0;
   out_1090406756321095952[325] = 0;
   out_1090406756321095952[326] = 0;
   out_1090406756321095952[327] = 0;
   out_1090406756321095952[328] = 0;
   out_1090406756321095952[329] = 1.0;
   out_1090406756321095952[330] = 0;
   out_1090406756321095952[331] = 0;
   out_1090406756321095952[332] = 0;
   out_1090406756321095952[333] = 0;
   out_1090406756321095952[334] = 0;
   out_1090406756321095952[335] = 0;
   out_1090406756321095952[336] = 0;
   out_1090406756321095952[337] = 0;
   out_1090406756321095952[338] = 0;
   out_1090406756321095952[339] = 0;
   out_1090406756321095952[340] = 0;
   out_1090406756321095952[341] = 0;
   out_1090406756321095952[342] = 0;
   out_1090406756321095952[343] = 0;
   out_1090406756321095952[344] = 0;
   out_1090406756321095952[345] = 0;
   out_1090406756321095952[346] = 0;
   out_1090406756321095952[347] = 0;
   out_1090406756321095952[348] = 0;
   out_1090406756321095952[349] = 0;
   out_1090406756321095952[350] = 0;
   out_1090406756321095952[351] = 1.0;
   out_1090406756321095952[352] = 0;
   out_1090406756321095952[353] = 0;
   out_1090406756321095952[354] = 0;
   out_1090406756321095952[355] = 0;
   out_1090406756321095952[356] = 0;
   out_1090406756321095952[357] = 0;
   out_1090406756321095952[358] = 0;
   out_1090406756321095952[359] = 0;
   out_1090406756321095952[360] = 0;
   out_1090406756321095952[361] = 0;
   out_1090406756321095952[362] = 0;
   out_1090406756321095952[363] = 0;
   out_1090406756321095952[364] = 0;
   out_1090406756321095952[365] = 0;
   out_1090406756321095952[366] = 0;
   out_1090406756321095952[367] = 0;
   out_1090406756321095952[368] = 0;
   out_1090406756321095952[369] = 0;
   out_1090406756321095952[370] = 0;
   out_1090406756321095952[371] = 0;
   out_1090406756321095952[372] = 0;
   out_1090406756321095952[373] = 1.0;
   out_1090406756321095952[374] = 0;
   out_1090406756321095952[375] = 0;
   out_1090406756321095952[376] = 0;
   out_1090406756321095952[377] = 0;
   out_1090406756321095952[378] = 0;
   out_1090406756321095952[379] = 0;
   out_1090406756321095952[380] = 0;
   out_1090406756321095952[381] = 0;
   out_1090406756321095952[382] = 0;
   out_1090406756321095952[383] = 0;
   out_1090406756321095952[384] = 0;
   out_1090406756321095952[385] = 0;
   out_1090406756321095952[386] = 0;
   out_1090406756321095952[387] = 0;
   out_1090406756321095952[388] = 0;
   out_1090406756321095952[389] = 0;
   out_1090406756321095952[390] = 0;
   out_1090406756321095952[391] = 0;
   out_1090406756321095952[392] = 0;
   out_1090406756321095952[393] = 0;
   out_1090406756321095952[394] = 0;
   out_1090406756321095952[395] = 1.0;
   out_1090406756321095952[396] = 0;
   out_1090406756321095952[397] = 0;
   out_1090406756321095952[398] = 0;
   out_1090406756321095952[399] = 0;
   out_1090406756321095952[400] = 0;
   out_1090406756321095952[401] = 0;
   out_1090406756321095952[402] = 0;
   out_1090406756321095952[403] = 0;
   out_1090406756321095952[404] = 0;
   out_1090406756321095952[405] = 0;
   out_1090406756321095952[406] = 0;
   out_1090406756321095952[407] = 0;
   out_1090406756321095952[408] = 0;
   out_1090406756321095952[409] = 0;
   out_1090406756321095952[410] = 0;
   out_1090406756321095952[411] = 0;
   out_1090406756321095952[412] = 0;
   out_1090406756321095952[413] = 0;
   out_1090406756321095952[414] = 0;
   out_1090406756321095952[415] = 0;
   out_1090406756321095952[416] = 0;
   out_1090406756321095952[417] = 1.0;
   out_1090406756321095952[418] = 0;
   out_1090406756321095952[419] = 0;
   out_1090406756321095952[420] = 0;
   out_1090406756321095952[421] = 0;
   out_1090406756321095952[422] = 0;
   out_1090406756321095952[423] = 0;
   out_1090406756321095952[424] = 0;
   out_1090406756321095952[425] = 0;
   out_1090406756321095952[426] = 0;
   out_1090406756321095952[427] = 0;
   out_1090406756321095952[428] = 0;
   out_1090406756321095952[429] = 0;
   out_1090406756321095952[430] = 0;
   out_1090406756321095952[431] = 0;
   out_1090406756321095952[432] = 0;
   out_1090406756321095952[433] = 0;
   out_1090406756321095952[434] = 0;
   out_1090406756321095952[435] = 0;
   out_1090406756321095952[436] = 0;
   out_1090406756321095952[437] = 0;
   out_1090406756321095952[438] = 0;
   out_1090406756321095952[439] = 1.0;
   out_1090406756321095952[440] = 0;
   out_1090406756321095952[441] = 0;
   out_1090406756321095952[442] = 0;
   out_1090406756321095952[443] = 0;
   out_1090406756321095952[444] = 0;
   out_1090406756321095952[445] = 0;
   out_1090406756321095952[446] = 0;
   out_1090406756321095952[447] = 0;
   out_1090406756321095952[448] = 0;
   out_1090406756321095952[449] = 0;
   out_1090406756321095952[450] = 0;
   out_1090406756321095952[451] = 0;
   out_1090406756321095952[452] = 0;
   out_1090406756321095952[453] = 0;
   out_1090406756321095952[454] = 0;
   out_1090406756321095952[455] = 0;
   out_1090406756321095952[456] = 0;
   out_1090406756321095952[457] = 0;
   out_1090406756321095952[458] = 0;
   out_1090406756321095952[459] = 0;
   out_1090406756321095952[460] = 0;
   out_1090406756321095952[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1607575285317213045) {
   out_1607575285317213045[0] = dt*state[7] + state[0];
   out_1607575285317213045[1] = dt*state[8] + state[1];
   out_1607575285317213045[2] = dt*state[9] + state[2];
   out_1607575285317213045[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1607575285317213045[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1607575285317213045[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1607575285317213045[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1607575285317213045[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1607575285317213045[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1607575285317213045[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1607575285317213045[10] = state[10];
   out_1607575285317213045[11] = state[11];
   out_1607575285317213045[12] = state[12];
   out_1607575285317213045[13] = state[13];
   out_1607575285317213045[14] = state[14];
   out_1607575285317213045[15] = state[15];
   out_1607575285317213045[16] = state[16];
   out_1607575285317213045[17] = state[17];
   out_1607575285317213045[18] = state[18];
   out_1607575285317213045[19] = state[19];
   out_1607575285317213045[20] = state[20];
   out_1607575285317213045[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3881758448010921799) {
   out_3881758448010921799[0] = 1;
   out_3881758448010921799[1] = 0;
   out_3881758448010921799[2] = 0;
   out_3881758448010921799[3] = 0;
   out_3881758448010921799[4] = 0;
   out_3881758448010921799[5] = 0;
   out_3881758448010921799[6] = dt;
   out_3881758448010921799[7] = 0;
   out_3881758448010921799[8] = 0;
   out_3881758448010921799[9] = 0;
   out_3881758448010921799[10] = 0;
   out_3881758448010921799[11] = 0;
   out_3881758448010921799[12] = 0;
   out_3881758448010921799[13] = 0;
   out_3881758448010921799[14] = 0;
   out_3881758448010921799[15] = 0;
   out_3881758448010921799[16] = 0;
   out_3881758448010921799[17] = 0;
   out_3881758448010921799[18] = 0;
   out_3881758448010921799[19] = 0;
   out_3881758448010921799[20] = 0;
   out_3881758448010921799[21] = 0;
   out_3881758448010921799[22] = 1;
   out_3881758448010921799[23] = 0;
   out_3881758448010921799[24] = 0;
   out_3881758448010921799[25] = 0;
   out_3881758448010921799[26] = 0;
   out_3881758448010921799[27] = 0;
   out_3881758448010921799[28] = dt;
   out_3881758448010921799[29] = 0;
   out_3881758448010921799[30] = 0;
   out_3881758448010921799[31] = 0;
   out_3881758448010921799[32] = 0;
   out_3881758448010921799[33] = 0;
   out_3881758448010921799[34] = 0;
   out_3881758448010921799[35] = 0;
   out_3881758448010921799[36] = 0;
   out_3881758448010921799[37] = 0;
   out_3881758448010921799[38] = 0;
   out_3881758448010921799[39] = 0;
   out_3881758448010921799[40] = 0;
   out_3881758448010921799[41] = 0;
   out_3881758448010921799[42] = 0;
   out_3881758448010921799[43] = 0;
   out_3881758448010921799[44] = 1;
   out_3881758448010921799[45] = 0;
   out_3881758448010921799[46] = 0;
   out_3881758448010921799[47] = 0;
   out_3881758448010921799[48] = 0;
   out_3881758448010921799[49] = 0;
   out_3881758448010921799[50] = dt;
   out_3881758448010921799[51] = 0;
   out_3881758448010921799[52] = 0;
   out_3881758448010921799[53] = 0;
   out_3881758448010921799[54] = 0;
   out_3881758448010921799[55] = 0;
   out_3881758448010921799[56] = 0;
   out_3881758448010921799[57] = 0;
   out_3881758448010921799[58] = 0;
   out_3881758448010921799[59] = 0;
   out_3881758448010921799[60] = 0;
   out_3881758448010921799[61] = 0;
   out_3881758448010921799[62] = 0;
   out_3881758448010921799[63] = 0;
   out_3881758448010921799[64] = 0;
   out_3881758448010921799[65] = 0;
   out_3881758448010921799[66] = 1;
   out_3881758448010921799[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3881758448010921799[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3881758448010921799[69] = 0;
   out_3881758448010921799[70] = 0;
   out_3881758448010921799[71] = 0;
   out_3881758448010921799[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3881758448010921799[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3881758448010921799[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3881758448010921799[75] = 0;
   out_3881758448010921799[76] = 0;
   out_3881758448010921799[77] = 0;
   out_3881758448010921799[78] = 0;
   out_3881758448010921799[79] = 0;
   out_3881758448010921799[80] = 0;
   out_3881758448010921799[81] = 0;
   out_3881758448010921799[82] = 0;
   out_3881758448010921799[83] = 0;
   out_3881758448010921799[84] = 0;
   out_3881758448010921799[85] = 0;
   out_3881758448010921799[86] = 0;
   out_3881758448010921799[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3881758448010921799[88] = 1;
   out_3881758448010921799[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3881758448010921799[90] = 0;
   out_3881758448010921799[91] = 0;
   out_3881758448010921799[92] = 0;
   out_3881758448010921799[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3881758448010921799[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3881758448010921799[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3881758448010921799[96] = 0;
   out_3881758448010921799[97] = 0;
   out_3881758448010921799[98] = 0;
   out_3881758448010921799[99] = 0;
   out_3881758448010921799[100] = 0;
   out_3881758448010921799[101] = 0;
   out_3881758448010921799[102] = 0;
   out_3881758448010921799[103] = 0;
   out_3881758448010921799[104] = 0;
   out_3881758448010921799[105] = 0;
   out_3881758448010921799[106] = 0;
   out_3881758448010921799[107] = 0;
   out_3881758448010921799[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3881758448010921799[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3881758448010921799[110] = 1;
   out_3881758448010921799[111] = 0;
   out_3881758448010921799[112] = 0;
   out_3881758448010921799[113] = 0;
   out_3881758448010921799[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3881758448010921799[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3881758448010921799[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3881758448010921799[117] = 0;
   out_3881758448010921799[118] = 0;
   out_3881758448010921799[119] = 0;
   out_3881758448010921799[120] = 0;
   out_3881758448010921799[121] = 0;
   out_3881758448010921799[122] = 0;
   out_3881758448010921799[123] = 0;
   out_3881758448010921799[124] = 0;
   out_3881758448010921799[125] = 0;
   out_3881758448010921799[126] = 0;
   out_3881758448010921799[127] = 0;
   out_3881758448010921799[128] = 0;
   out_3881758448010921799[129] = 0;
   out_3881758448010921799[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3881758448010921799[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3881758448010921799[132] = 1;
   out_3881758448010921799[133] = 0;
   out_3881758448010921799[134] = 0;
   out_3881758448010921799[135] = 0;
   out_3881758448010921799[136] = 0;
   out_3881758448010921799[137] = 0;
   out_3881758448010921799[138] = 0;
   out_3881758448010921799[139] = 0;
   out_3881758448010921799[140] = 0;
   out_3881758448010921799[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3881758448010921799[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3881758448010921799[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3881758448010921799[144] = 0;
   out_3881758448010921799[145] = 0;
   out_3881758448010921799[146] = 0;
   out_3881758448010921799[147] = 0;
   out_3881758448010921799[148] = 0;
   out_3881758448010921799[149] = 0;
   out_3881758448010921799[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3881758448010921799[151] = 0;
   out_3881758448010921799[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3881758448010921799[153] = 0;
   out_3881758448010921799[154] = 1;
   out_3881758448010921799[155] = 0;
   out_3881758448010921799[156] = 0;
   out_3881758448010921799[157] = 0;
   out_3881758448010921799[158] = 0;
   out_3881758448010921799[159] = 0;
   out_3881758448010921799[160] = 0;
   out_3881758448010921799[161] = 0;
   out_3881758448010921799[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3881758448010921799[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3881758448010921799[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3881758448010921799[165] = 0;
   out_3881758448010921799[166] = 0;
   out_3881758448010921799[167] = 0;
   out_3881758448010921799[168] = 0;
   out_3881758448010921799[169] = 0;
   out_3881758448010921799[170] = 0;
   out_3881758448010921799[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3881758448010921799[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3881758448010921799[173] = 0;
   out_3881758448010921799[174] = 0;
   out_3881758448010921799[175] = 0;
   out_3881758448010921799[176] = 1;
   out_3881758448010921799[177] = 0;
   out_3881758448010921799[178] = 0;
   out_3881758448010921799[179] = 0;
   out_3881758448010921799[180] = 0;
   out_3881758448010921799[181] = 0;
   out_3881758448010921799[182] = 0;
   out_3881758448010921799[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3881758448010921799[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3881758448010921799[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3881758448010921799[186] = 0;
   out_3881758448010921799[187] = 0;
   out_3881758448010921799[188] = 0;
   out_3881758448010921799[189] = 0;
   out_3881758448010921799[190] = 0;
   out_3881758448010921799[191] = 0;
   out_3881758448010921799[192] = 0;
   out_3881758448010921799[193] = 0;
   out_3881758448010921799[194] = 0;
   out_3881758448010921799[195] = 0;
   out_3881758448010921799[196] = 0;
   out_3881758448010921799[197] = 0;
   out_3881758448010921799[198] = 1;
   out_3881758448010921799[199] = 0;
   out_3881758448010921799[200] = 0;
   out_3881758448010921799[201] = 0;
   out_3881758448010921799[202] = 0;
   out_3881758448010921799[203] = 0;
   out_3881758448010921799[204] = 0;
   out_3881758448010921799[205] = 0;
   out_3881758448010921799[206] = 0;
   out_3881758448010921799[207] = 0;
   out_3881758448010921799[208] = 0;
   out_3881758448010921799[209] = 0;
   out_3881758448010921799[210] = 0;
   out_3881758448010921799[211] = 0;
   out_3881758448010921799[212] = 0;
   out_3881758448010921799[213] = 0;
   out_3881758448010921799[214] = 0;
   out_3881758448010921799[215] = 0;
   out_3881758448010921799[216] = 0;
   out_3881758448010921799[217] = 0;
   out_3881758448010921799[218] = 0;
   out_3881758448010921799[219] = 0;
   out_3881758448010921799[220] = 1;
   out_3881758448010921799[221] = 0;
   out_3881758448010921799[222] = 0;
   out_3881758448010921799[223] = 0;
   out_3881758448010921799[224] = 0;
   out_3881758448010921799[225] = 0;
   out_3881758448010921799[226] = 0;
   out_3881758448010921799[227] = 0;
   out_3881758448010921799[228] = 0;
   out_3881758448010921799[229] = 0;
   out_3881758448010921799[230] = 0;
   out_3881758448010921799[231] = 0;
   out_3881758448010921799[232] = 0;
   out_3881758448010921799[233] = 0;
   out_3881758448010921799[234] = 0;
   out_3881758448010921799[235] = 0;
   out_3881758448010921799[236] = 0;
   out_3881758448010921799[237] = 0;
   out_3881758448010921799[238] = 0;
   out_3881758448010921799[239] = 0;
   out_3881758448010921799[240] = 0;
   out_3881758448010921799[241] = 0;
   out_3881758448010921799[242] = 1;
   out_3881758448010921799[243] = 0;
   out_3881758448010921799[244] = 0;
   out_3881758448010921799[245] = 0;
   out_3881758448010921799[246] = 0;
   out_3881758448010921799[247] = 0;
   out_3881758448010921799[248] = 0;
   out_3881758448010921799[249] = 0;
   out_3881758448010921799[250] = 0;
   out_3881758448010921799[251] = 0;
   out_3881758448010921799[252] = 0;
   out_3881758448010921799[253] = 0;
   out_3881758448010921799[254] = 0;
   out_3881758448010921799[255] = 0;
   out_3881758448010921799[256] = 0;
   out_3881758448010921799[257] = 0;
   out_3881758448010921799[258] = 0;
   out_3881758448010921799[259] = 0;
   out_3881758448010921799[260] = 0;
   out_3881758448010921799[261] = 0;
   out_3881758448010921799[262] = 0;
   out_3881758448010921799[263] = 0;
   out_3881758448010921799[264] = 1;
   out_3881758448010921799[265] = 0;
   out_3881758448010921799[266] = 0;
   out_3881758448010921799[267] = 0;
   out_3881758448010921799[268] = 0;
   out_3881758448010921799[269] = 0;
   out_3881758448010921799[270] = 0;
   out_3881758448010921799[271] = 0;
   out_3881758448010921799[272] = 0;
   out_3881758448010921799[273] = 0;
   out_3881758448010921799[274] = 0;
   out_3881758448010921799[275] = 0;
   out_3881758448010921799[276] = 0;
   out_3881758448010921799[277] = 0;
   out_3881758448010921799[278] = 0;
   out_3881758448010921799[279] = 0;
   out_3881758448010921799[280] = 0;
   out_3881758448010921799[281] = 0;
   out_3881758448010921799[282] = 0;
   out_3881758448010921799[283] = 0;
   out_3881758448010921799[284] = 0;
   out_3881758448010921799[285] = 0;
   out_3881758448010921799[286] = 1;
   out_3881758448010921799[287] = 0;
   out_3881758448010921799[288] = 0;
   out_3881758448010921799[289] = 0;
   out_3881758448010921799[290] = 0;
   out_3881758448010921799[291] = 0;
   out_3881758448010921799[292] = 0;
   out_3881758448010921799[293] = 0;
   out_3881758448010921799[294] = 0;
   out_3881758448010921799[295] = 0;
   out_3881758448010921799[296] = 0;
   out_3881758448010921799[297] = 0;
   out_3881758448010921799[298] = 0;
   out_3881758448010921799[299] = 0;
   out_3881758448010921799[300] = 0;
   out_3881758448010921799[301] = 0;
   out_3881758448010921799[302] = 0;
   out_3881758448010921799[303] = 0;
   out_3881758448010921799[304] = 0;
   out_3881758448010921799[305] = 0;
   out_3881758448010921799[306] = 0;
   out_3881758448010921799[307] = 0;
   out_3881758448010921799[308] = 1;
   out_3881758448010921799[309] = 0;
   out_3881758448010921799[310] = 0;
   out_3881758448010921799[311] = 0;
   out_3881758448010921799[312] = 0;
   out_3881758448010921799[313] = 0;
   out_3881758448010921799[314] = 0;
   out_3881758448010921799[315] = 0;
   out_3881758448010921799[316] = 0;
   out_3881758448010921799[317] = 0;
   out_3881758448010921799[318] = 0;
   out_3881758448010921799[319] = 0;
   out_3881758448010921799[320] = 0;
   out_3881758448010921799[321] = 0;
   out_3881758448010921799[322] = 0;
   out_3881758448010921799[323] = 0;
   out_3881758448010921799[324] = 0;
   out_3881758448010921799[325] = 0;
   out_3881758448010921799[326] = 0;
   out_3881758448010921799[327] = 0;
   out_3881758448010921799[328] = 0;
   out_3881758448010921799[329] = 0;
   out_3881758448010921799[330] = 1;
   out_3881758448010921799[331] = 0;
   out_3881758448010921799[332] = 0;
   out_3881758448010921799[333] = 0;
   out_3881758448010921799[334] = 0;
   out_3881758448010921799[335] = 0;
   out_3881758448010921799[336] = 0;
   out_3881758448010921799[337] = 0;
   out_3881758448010921799[338] = 0;
   out_3881758448010921799[339] = 0;
   out_3881758448010921799[340] = 0;
   out_3881758448010921799[341] = 0;
   out_3881758448010921799[342] = 0;
   out_3881758448010921799[343] = 0;
   out_3881758448010921799[344] = 0;
   out_3881758448010921799[345] = 0;
   out_3881758448010921799[346] = 0;
   out_3881758448010921799[347] = 0;
   out_3881758448010921799[348] = 0;
   out_3881758448010921799[349] = 0;
   out_3881758448010921799[350] = 0;
   out_3881758448010921799[351] = 0;
   out_3881758448010921799[352] = 1;
   out_3881758448010921799[353] = 0;
   out_3881758448010921799[354] = 0;
   out_3881758448010921799[355] = 0;
   out_3881758448010921799[356] = 0;
   out_3881758448010921799[357] = 0;
   out_3881758448010921799[358] = 0;
   out_3881758448010921799[359] = 0;
   out_3881758448010921799[360] = 0;
   out_3881758448010921799[361] = 0;
   out_3881758448010921799[362] = 0;
   out_3881758448010921799[363] = 0;
   out_3881758448010921799[364] = 0;
   out_3881758448010921799[365] = 0;
   out_3881758448010921799[366] = 0;
   out_3881758448010921799[367] = 0;
   out_3881758448010921799[368] = 0;
   out_3881758448010921799[369] = 0;
   out_3881758448010921799[370] = 0;
   out_3881758448010921799[371] = 0;
   out_3881758448010921799[372] = 0;
   out_3881758448010921799[373] = 0;
   out_3881758448010921799[374] = 1;
   out_3881758448010921799[375] = 0;
   out_3881758448010921799[376] = 0;
   out_3881758448010921799[377] = 0;
   out_3881758448010921799[378] = 0;
   out_3881758448010921799[379] = 0;
   out_3881758448010921799[380] = 0;
   out_3881758448010921799[381] = 0;
   out_3881758448010921799[382] = 0;
   out_3881758448010921799[383] = 0;
   out_3881758448010921799[384] = 0;
   out_3881758448010921799[385] = 0;
   out_3881758448010921799[386] = 0;
   out_3881758448010921799[387] = 0;
   out_3881758448010921799[388] = 0;
   out_3881758448010921799[389] = 0;
   out_3881758448010921799[390] = 0;
   out_3881758448010921799[391] = 0;
   out_3881758448010921799[392] = 0;
   out_3881758448010921799[393] = 0;
   out_3881758448010921799[394] = 0;
   out_3881758448010921799[395] = 0;
   out_3881758448010921799[396] = 1;
   out_3881758448010921799[397] = 0;
   out_3881758448010921799[398] = 0;
   out_3881758448010921799[399] = 0;
   out_3881758448010921799[400] = 0;
   out_3881758448010921799[401] = 0;
   out_3881758448010921799[402] = 0;
   out_3881758448010921799[403] = 0;
   out_3881758448010921799[404] = 0;
   out_3881758448010921799[405] = 0;
   out_3881758448010921799[406] = 0;
   out_3881758448010921799[407] = 0;
   out_3881758448010921799[408] = 0;
   out_3881758448010921799[409] = 0;
   out_3881758448010921799[410] = 0;
   out_3881758448010921799[411] = 0;
   out_3881758448010921799[412] = 0;
   out_3881758448010921799[413] = 0;
   out_3881758448010921799[414] = 0;
   out_3881758448010921799[415] = 0;
   out_3881758448010921799[416] = 0;
   out_3881758448010921799[417] = 0;
   out_3881758448010921799[418] = 1;
   out_3881758448010921799[419] = 0;
   out_3881758448010921799[420] = 0;
   out_3881758448010921799[421] = 0;
   out_3881758448010921799[422] = 0;
   out_3881758448010921799[423] = 0;
   out_3881758448010921799[424] = 0;
   out_3881758448010921799[425] = 0;
   out_3881758448010921799[426] = 0;
   out_3881758448010921799[427] = 0;
   out_3881758448010921799[428] = 0;
   out_3881758448010921799[429] = 0;
   out_3881758448010921799[430] = 0;
   out_3881758448010921799[431] = 0;
   out_3881758448010921799[432] = 0;
   out_3881758448010921799[433] = 0;
   out_3881758448010921799[434] = 0;
   out_3881758448010921799[435] = 0;
   out_3881758448010921799[436] = 0;
   out_3881758448010921799[437] = 0;
   out_3881758448010921799[438] = 0;
   out_3881758448010921799[439] = 0;
   out_3881758448010921799[440] = 1;
}
void h_4(double *state, double *unused, double *out_5351864317507456224) {
   out_5351864317507456224[0] = state[10] + state[13];
   out_5351864317507456224[1] = state[11] + state[14];
   out_5351864317507456224[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9128846745444311004) {
   out_9128846745444311004[0] = 0;
   out_9128846745444311004[1] = 0;
   out_9128846745444311004[2] = 0;
   out_9128846745444311004[3] = 0;
   out_9128846745444311004[4] = 0;
   out_9128846745444311004[5] = 0;
   out_9128846745444311004[6] = 0;
   out_9128846745444311004[7] = 0;
   out_9128846745444311004[8] = 0;
   out_9128846745444311004[9] = 0;
   out_9128846745444311004[10] = 1;
   out_9128846745444311004[11] = 0;
   out_9128846745444311004[12] = 0;
   out_9128846745444311004[13] = 1;
   out_9128846745444311004[14] = 0;
   out_9128846745444311004[15] = 0;
   out_9128846745444311004[16] = 0;
   out_9128846745444311004[17] = 0;
   out_9128846745444311004[18] = 0;
   out_9128846745444311004[19] = 0;
   out_9128846745444311004[20] = 0;
   out_9128846745444311004[21] = 0;
   out_9128846745444311004[22] = 0;
   out_9128846745444311004[23] = 0;
   out_9128846745444311004[24] = 0;
   out_9128846745444311004[25] = 0;
   out_9128846745444311004[26] = 0;
   out_9128846745444311004[27] = 0;
   out_9128846745444311004[28] = 0;
   out_9128846745444311004[29] = 0;
   out_9128846745444311004[30] = 0;
   out_9128846745444311004[31] = 0;
   out_9128846745444311004[32] = 0;
   out_9128846745444311004[33] = 1;
   out_9128846745444311004[34] = 0;
   out_9128846745444311004[35] = 0;
   out_9128846745444311004[36] = 1;
   out_9128846745444311004[37] = 0;
   out_9128846745444311004[38] = 0;
   out_9128846745444311004[39] = 0;
   out_9128846745444311004[40] = 0;
   out_9128846745444311004[41] = 0;
   out_9128846745444311004[42] = 0;
   out_9128846745444311004[43] = 0;
   out_9128846745444311004[44] = 0;
   out_9128846745444311004[45] = 0;
   out_9128846745444311004[46] = 0;
   out_9128846745444311004[47] = 0;
   out_9128846745444311004[48] = 0;
   out_9128846745444311004[49] = 0;
   out_9128846745444311004[50] = 0;
   out_9128846745444311004[51] = 0;
   out_9128846745444311004[52] = 0;
   out_9128846745444311004[53] = 0;
   out_9128846745444311004[54] = 0;
   out_9128846745444311004[55] = 0;
   out_9128846745444311004[56] = 1;
   out_9128846745444311004[57] = 0;
   out_9128846745444311004[58] = 0;
   out_9128846745444311004[59] = 1;
   out_9128846745444311004[60] = 0;
   out_9128846745444311004[61] = 0;
   out_9128846745444311004[62] = 0;
   out_9128846745444311004[63] = 0;
   out_9128846745444311004[64] = 0;
   out_9128846745444311004[65] = 0;
}
void h_9(double *state, double *unused, double *out_2329374119852845347) {
   out_2329374119852845347[0] = state[10];
   out_2329374119852845347[1] = state[11];
   out_2329374119852845347[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2030678393000793142) {
   out_2030678393000793142[0] = 0;
   out_2030678393000793142[1] = 0;
   out_2030678393000793142[2] = 0;
   out_2030678393000793142[3] = 0;
   out_2030678393000793142[4] = 0;
   out_2030678393000793142[5] = 0;
   out_2030678393000793142[6] = 0;
   out_2030678393000793142[7] = 0;
   out_2030678393000793142[8] = 0;
   out_2030678393000793142[9] = 0;
   out_2030678393000793142[10] = 1;
   out_2030678393000793142[11] = 0;
   out_2030678393000793142[12] = 0;
   out_2030678393000793142[13] = 0;
   out_2030678393000793142[14] = 0;
   out_2030678393000793142[15] = 0;
   out_2030678393000793142[16] = 0;
   out_2030678393000793142[17] = 0;
   out_2030678393000793142[18] = 0;
   out_2030678393000793142[19] = 0;
   out_2030678393000793142[20] = 0;
   out_2030678393000793142[21] = 0;
   out_2030678393000793142[22] = 0;
   out_2030678393000793142[23] = 0;
   out_2030678393000793142[24] = 0;
   out_2030678393000793142[25] = 0;
   out_2030678393000793142[26] = 0;
   out_2030678393000793142[27] = 0;
   out_2030678393000793142[28] = 0;
   out_2030678393000793142[29] = 0;
   out_2030678393000793142[30] = 0;
   out_2030678393000793142[31] = 0;
   out_2030678393000793142[32] = 0;
   out_2030678393000793142[33] = 1;
   out_2030678393000793142[34] = 0;
   out_2030678393000793142[35] = 0;
   out_2030678393000793142[36] = 0;
   out_2030678393000793142[37] = 0;
   out_2030678393000793142[38] = 0;
   out_2030678393000793142[39] = 0;
   out_2030678393000793142[40] = 0;
   out_2030678393000793142[41] = 0;
   out_2030678393000793142[42] = 0;
   out_2030678393000793142[43] = 0;
   out_2030678393000793142[44] = 0;
   out_2030678393000793142[45] = 0;
   out_2030678393000793142[46] = 0;
   out_2030678393000793142[47] = 0;
   out_2030678393000793142[48] = 0;
   out_2030678393000793142[49] = 0;
   out_2030678393000793142[50] = 0;
   out_2030678393000793142[51] = 0;
   out_2030678393000793142[52] = 0;
   out_2030678393000793142[53] = 0;
   out_2030678393000793142[54] = 0;
   out_2030678393000793142[55] = 0;
   out_2030678393000793142[56] = 1;
   out_2030678393000793142[57] = 0;
   out_2030678393000793142[58] = 0;
   out_2030678393000793142[59] = 0;
   out_2030678393000793142[60] = 0;
   out_2030678393000793142[61] = 0;
   out_2030678393000793142[62] = 0;
   out_2030678393000793142[63] = 0;
   out_2030678393000793142[64] = 0;
   out_2030678393000793142[65] = 0;
}
void h_10(double *state, double *unused, double *out_2828269157780052031) {
   out_2828269157780052031[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2828269157780052031[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2828269157780052031[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1320877861754912006) {
   out_1320877861754912006[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1320877861754912006[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1320877861754912006[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1320877861754912006[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1320877861754912006[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1320877861754912006[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1320877861754912006[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1320877861754912006[7] = 0;
   out_1320877861754912006[8] = 0;
   out_1320877861754912006[9] = 0;
   out_1320877861754912006[10] = 0;
   out_1320877861754912006[11] = 0;
   out_1320877861754912006[12] = 0;
   out_1320877861754912006[13] = 0;
   out_1320877861754912006[14] = 0;
   out_1320877861754912006[15] = 0;
   out_1320877861754912006[16] = 1;
   out_1320877861754912006[17] = 0;
   out_1320877861754912006[18] = 0;
   out_1320877861754912006[19] = 1;
   out_1320877861754912006[20] = 0;
   out_1320877861754912006[21] = 0;
   out_1320877861754912006[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1320877861754912006[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1320877861754912006[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1320877861754912006[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1320877861754912006[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1320877861754912006[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1320877861754912006[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1320877861754912006[29] = 0;
   out_1320877861754912006[30] = 0;
   out_1320877861754912006[31] = 0;
   out_1320877861754912006[32] = 0;
   out_1320877861754912006[33] = 0;
   out_1320877861754912006[34] = 0;
   out_1320877861754912006[35] = 0;
   out_1320877861754912006[36] = 0;
   out_1320877861754912006[37] = 0;
   out_1320877861754912006[38] = 0;
   out_1320877861754912006[39] = 1;
   out_1320877861754912006[40] = 0;
   out_1320877861754912006[41] = 0;
   out_1320877861754912006[42] = 1;
   out_1320877861754912006[43] = 0;
   out_1320877861754912006[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1320877861754912006[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1320877861754912006[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1320877861754912006[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1320877861754912006[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1320877861754912006[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1320877861754912006[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1320877861754912006[51] = 0;
   out_1320877861754912006[52] = 0;
   out_1320877861754912006[53] = 0;
   out_1320877861754912006[54] = 0;
   out_1320877861754912006[55] = 0;
   out_1320877861754912006[56] = 0;
   out_1320877861754912006[57] = 0;
   out_1320877861754912006[58] = 0;
   out_1320877861754912006[59] = 0;
   out_1320877861754912006[60] = 0;
   out_1320877861754912006[61] = 0;
   out_1320877861754912006[62] = 1;
   out_1320877861754912006[63] = 0;
   out_1320877861754912006[64] = 0;
   out_1320877861754912006[65] = 1;
}
void h_12(double *state, double *unused, double *out_6763182500966395644) {
   out_6763182500966395644[0] = state[0];
   out_6763182500966395644[1] = state[1];
   out_6763182500966395644[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1650769014582790120) {
   out_1650769014582790120[0] = 1;
   out_1650769014582790120[1] = 0;
   out_1650769014582790120[2] = 0;
   out_1650769014582790120[3] = 0;
   out_1650769014582790120[4] = 0;
   out_1650769014582790120[5] = 0;
   out_1650769014582790120[6] = 0;
   out_1650769014582790120[7] = 0;
   out_1650769014582790120[8] = 0;
   out_1650769014582790120[9] = 0;
   out_1650769014582790120[10] = 0;
   out_1650769014582790120[11] = 0;
   out_1650769014582790120[12] = 0;
   out_1650769014582790120[13] = 0;
   out_1650769014582790120[14] = 0;
   out_1650769014582790120[15] = 0;
   out_1650769014582790120[16] = 0;
   out_1650769014582790120[17] = 0;
   out_1650769014582790120[18] = 0;
   out_1650769014582790120[19] = 0;
   out_1650769014582790120[20] = 0;
   out_1650769014582790120[21] = 0;
   out_1650769014582790120[22] = 0;
   out_1650769014582790120[23] = 1;
   out_1650769014582790120[24] = 0;
   out_1650769014582790120[25] = 0;
   out_1650769014582790120[26] = 0;
   out_1650769014582790120[27] = 0;
   out_1650769014582790120[28] = 0;
   out_1650769014582790120[29] = 0;
   out_1650769014582790120[30] = 0;
   out_1650769014582790120[31] = 0;
   out_1650769014582790120[32] = 0;
   out_1650769014582790120[33] = 0;
   out_1650769014582790120[34] = 0;
   out_1650769014582790120[35] = 0;
   out_1650769014582790120[36] = 0;
   out_1650769014582790120[37] = 0;
   out_1650769014582790120[38] = 0;
   out_1650769014582790120[39] = 0;
   out_1650769014582790120[40] = 0;
   out_1650769014582790120[41] = 0;
   out_1650769014582790120[42] = 0;
   out_1650769014582790120[43] = 0;
   out_1650769014582790120[44] = 0;
   out_1650769014582790120[45] = 0;
   out_1650769014582790120[46] = 1;
   out_1650769014582790120[47] = 0;
   out_1650769014582790120[48] = 0;
   out_1650769014582790120[49] = 0;
   out_1650769014582790120[50] = 0;
   out_1650769014582790120[51] = 0;
   out_1650769014582790120[52] = 0;
   out_1650769014582790120[53] = 0;
   out_1650769014582790120[54] = 0;
   out_1650769014582790120[55] = 0;
   out_1650769014582790120[56] = 0;
   out_1650769014582790120[57] = 0;
   out_1650769014582790120[58] = 0;
   out_1650769014582790120[59] = 0;
   out_1650769014582790120[60] = 0;
   out_1650769014582790120[61] = 0;
   out_1650769014582790120[62] = 0;
   out_1650769014582790120[63] = 0;
   out_1650769014582790120[64] = 0;
   out_1650769014582790120[65] = 0;
}
void h_35(double *state, double *unused, double *out_7964897784483847122) {
   out_7964897784483847122[0] = state[7];
   out_7964897784483847122[1] = state[8];
   out_7964897784483847122[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5951235270892633236) {
   out_5951235270892633236[0] = 0;
   out_5951235270892633236[1] = 0;
   out_5951235270892633236[2] = 0;
   out_5951235270892633236[3] = 0;
   out_5951235270892633236[4] = 0;
   out_5951235270892633236[5] = 0;
   out_5951235270892633236[6] = 0;
   out_5951235270892633236[7] = 1;
   out_5951235270892633236[8] = 0;
   out_5951235270892633236[9] = 0;
   out_5951235270892633236[10] = 0;
   out_5951235270892633236[11] = 0;
   out_5951235270892633236[12] = 0;
   out_5951235270892633236[13] = 0;
   out_5951235270892633236[14] = 0;
   out_5951235270892633236[15] = 0;
   out_5951235270892633236[16] = 0;
   out_5951235270892633236[17] = 0;
   out_5951235270892633236[18] = 0;
   out_5951235270892633236[19] = 0;
   out_5951235270892633236[20] = 0;
   out_5951235270892633236[21] = 0;
   out_5951235270892633236[22] = 0;
   out_5951235270892633236[23] = 0;
   out_5951235270892633236[24] = 0;
   out_5951235270892633236[25] = 0;
   out_5951235270892633236[26] = 0;
   out_5951235270892633236[27] = 0;
   out_5951235270892633236[28] = 0;
   out_5951235270892633236[29] = 0;
   out_5951235270892633236[30] = 1;
   out_5951235270892633236[31] = 0;
   out_5951235270892633236[32] = 0;
   out_5951235270892633236[33] = 0;
   out_5951235270892633236[34] = 0;
   out_5951235270892633236[35] = 0;
   out_5951235270892633236[36] = 0;
   out_5951235270892633236[37] = 0;
   out_5951235270892633236[38] = 0;
   out_5951235270892633236[39] = 0;
   out_5951235270892633236[40] = 0;
   out_5951235270892633236[41] = 0;
   out_5951235270892633236[42] = 0;
   out_5951235270892633236[43] = 0;
   out_5951235270892633236[44] = 0;
   out_5951235270892633236[45] = 0;
   out_5951235270892633236[46] = 0;
   out_5951235270892633236[47] = 0;
   out_5951235270892633236[48] = 0;
   out_5951235270892633236[49] = 0;
   out_5951235270892633236[50] = 0;
   out_5951235270892633236[51] = 0;
   out_5951235270892633236[52] = 0;
   out_5951235270892633236[53] = 1;
   out_5951235270892633236[54] = 0;
   out_5951235270892633236[55] = 0;
   out_5951235270892633236[56] = 0;
   out_5951235270892633236[57] = 0;
   out_5951235270892633236[58] = 0;
   out_5951235270892633236[59] = 0;
   out_5951235270892633236[60] = 0;
   out_5951235270892633236[61] = 0;
   out_5951235270892633236[62] = 0;
   out_5951235270892633236[63] = 0;
   out_5951235270892633236[64] = 0;
   out_5951235270892633236[65] = 0;
}
void h_32(double *state, double *unused, double *out_415144153704329373) {
   out_415144153704329373[0] = state[3];
   out_415144153704329373[1] = state[4];
   out_415144153704329373[2] = state[5];
   out_415144153704329373[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4642638357729382318) {
   out_4642638357729382318[0] = 0;
   out_4642638357729382318[1] = 0;
   out_4642638357729382318[2] = 0;
   out_4642638357729382318[3] = 1;
   out_4642638357729382318[4] = 0;
   out_4642638357729382318[5] = 0;
   out_4642638357729382318[6] = 0;
   out_4642638357729382318[7] = 0;
   out_4642638357729382318[8] = 0;
   out_4642638357729382318[9] = 0;
   out_4642638357729382318[10] = 0;
   out_4642638357729382318[11] = 0;
   out_4642638357729382318[12] = 0;
   out_4642638357729382318[13] = 0;
   out_4642638357729382318[14] = 0;
   out_4642638357729382318[15] = 0;
   out_4642638357729382318[16] = 0;
   out_4642638357729382318[17] = 0;
   out_4642638357729382318[18] = 0;
   out_4642638357729382318[19] = 0;
   out_4642638357729382318[20] = 0;
   out_4642638357729382318[21] = 0;
   out_4642638357729382318[22] = 0;
   out_4642638357729382318[23] = 0;
   out_4642638357729382318[24] = 0;
   out_4642638357729382318[25] = 0;
   out_4642638357729382318[26] = 1;
   out_4642638357729382318[27] = 0;
   out_4642638357729382318[28] = 0;
   out_4642638357729382318[29] = 0;
   out_4642638357729382318[30] = 0;
   out_4642638357729382318[31] = 0;
   out_4642638357729382318[32] = 0;
   out_4642638357729382318[33] = 0;
   out_4642638357729382318[34] = 0;
   out_4642638357729382318[35] = 0;
   out_4642638357729382318[36] = 0;
   out_4642638357729382318[37] = 0;
   out_4642638357729382318[38] = 0;
   out_4642638357729382318[39] = 0;
   out_4642638357729382318[40] = 0;
   out_4642638357729382318[41] = 0;
   out_4642638357729382318[42] = 0;
   out_4642638357729382318[43] = 0;
   out_4642638357729382318[44] = 0;
   out_4642638357729382318[45] = 0;
   out_4642638357729382318[46] = 0;
   out_4642638357729382318[47] = 0;
   out_4642638357729382318[48] = 0;
   out_4642638357729382318[49] = 1;
   out_4642638357729382318[50] = 0;
   out_4642638357729382318[51] = 0;
   out_4642638357729382318[52] = 0;
   out_4642638357729382318[53] = 0;
   out_4642638357729382318[54] = 0;
   out_4642638357729382318[55] = 0;
   out_4642638357729382318[56] = 0;
   out_4642638357729382318[57] = 0;
   out_4642638357729382318[58] = 0;
   out_4642638357729382318[59] = 0;
   out_4642638357729382318[60] = 0;
   out_4642638357729382318[61] = 0;
   out_4642638357729382318[62] = 0;
   out_4642638357729382318[63] = 0;
   out_4642638357729382318[64] = 0;
   out_4642638357729382318[65] = 0;
   out_4642638357729382318[66] = 0;
   out_4642638357729382318[67] = 0;
   out_4642638357729382318[68] = 0;
   out_4642638357729382318[69] = 0;
   out_4642638357729382318[70] = 0;
   out_4642638357729382318[71] = 0;
   out_4642638357729382318[72] = 1;
   out_4642638357729382318[73] = 0;
   out_4642638357729382318[74] = 0;
   out_4642638357729382318[75] = 0;
   out_4642638357729382318[76] = 0;
   out_4642638357729382318[77] = 0;
   out_4642638357729382318[78] = 0;
   out_4642638357729382318[79] = 0;
   out_4642638357729382318[80] = 0;
   out_4642638357729382318[81] = 0;
   out_4642638357729382318[82] = 0;
   out_4642638357729382318[83] = 0;
   out_4642638357729382318[84] = 0;
   out_4642638357729382318[85] = 0;
   out_4642638357729382318[86] = 0;
   out_4642638357729382318[87] = 0;
}
void h_13(double *state, double *unused, double *out_8033899621259556965) {
   out_8033899621259556965[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8033899621259556965[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8033899621259556965[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1251369415488548331) {
   out_1251369415488548331[0] = 0;
   out_1251369415488548331[1] = 0;
   out_1251369415488548331[2] = 0;
   out_1251369415488548331[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1251369415488548331[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1251369415488548331[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1251369415488548331[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1251369415488548331[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1251369415488548331[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1251369415488548331[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1251369415488548331[10] = 0;
   out_1251369415488548331[11] = 0;
   out_1251369415488548331[12] = 0;
   out_1251369415488548331[13] = 0;
   out_1251369415488548331[14] = 0;
   out_1251369415488548331[15] = 0;
   out_1251369415488548331[16] = 0;
   out_1251369415488548331[17] = 0;
   out_1251369415488548331[18] = 0;
   out_1251369415488548331[19] = 0;
   out_1251369415488548331[20] = 0;
   out_1251369415488548331[21] = 0;
   out_1251369415488548331[22] = 0;
   out_1251369415488548331[23] = 0;
   out_1251369415488548331[24] = 0;
   out_1251369415488548331[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1251369415488548331[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1251369415488548331[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1251369415488548331[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1251369415488548331[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1251369415488548331[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1251369415488548331[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1251369415488548331[32] = 0;
   out_1251369415488548331[33] = 0;
   out_1251369415488548331[34] = 0;
   out_1251369415488548331[35] = 0;
   out_1251369415488548331[36] = 0;
   out_1251369415488548331[37] = 0;
   out_1251369415488548331[38] = 0;
   out_1251369415488548331[39] = 0;
   out_1251369415488548331[40] = 0;
   out_1251369415488548331[41] = 0;
   out_1251369415488548331[42] = 0;
   out_1251369415488548331[43] = 0;
   out_1251369415488548331[44] = 0;
   out_1251369415488548331[45] = 0;
   out_1251369415488548331[46] = 0;
   out_1251369415488548331[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1251369415488548331[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1251369415488548331[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1251369415488548331[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1251369415488548331[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1251369415488548331[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1251369415488548331[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1251369415488548331[54] = 0;
   out_1251369415488548331[55] = 0;
   out_1251369415488548331[56] = 0;
   out_1251369415488548331[57] = 0;
   out_1251369415488548331[58] = 0;
   out_1251369415488548331[59] = 0;
   out_1251369415488548331[60] = 0;
   out_1251369415488548331[61] = 0;
   out_1251369415488548331[62] = 0;
   out_1251369415488548331[63] = 0;
   out_1251369415488548331[64] = 0;
   out_1251369415488548331[65] = 0;
}
void h_14(double *state, double *unused, double *out_2329374119852845347) {
   out_2329374119852845347[0] = state[10];
   out_2329374119852845347[1] = state[11];
   out_2329374119852845347[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2030678393000793142) {
   out_2030678393000793142[0] = 0;
   out_2030678393000793142[1] = 0;
   out_2030678393000793142[2] = 0;
   out_2030678393000793142[3] = 0;
   out_2030678393000793142[4] = 0;
   out_2030678393000793142[5] = 0;
   out_2030678393000793142[6] = 0;
   out_2030678393000793142[7] = 0;
   out_2030678393000793142[8] = 0;
   out_2030678393000793142[9] = 0;
   out_2030678393000793142[10] = 1;
   out_2030678393000793142[11] = 0;
   out_2030678393000793142[12] = 0;
   out_2030678393000793142[13] = 0;
   out_2030678393000793142[14] = 0;
   out_2030678393000793142[15] = 0;
   out_2030678393000793142[16] = 0;
   out_2030678393000793142[17] = 0;
   out_2030678393000793142[18] = 0;
   out_2030678393000793142[19] = 0;
   out_2030678393000793142[20] = 0;
   out_2030678393000793142[21] = 0;
   out_2030678393000793142[22] = 0;
   out_2030678393000793142[23] = 0;
   out_2030678393000793142[24] = 0;
   out_2030678393000793142[25] = 0;
   out_2030678393000793142[26] = 0;
   out_2030678393000793142[27] = 0;
   out_2030678393000793142[28] = 0;
   out_2030678393000793142[29] = 0;
   out_2030678393000793142[30] = 0;
   out_2030678393000793142[31] = 0;
   out_2030678393000793142[32] = 0;
   out_2030678393000793142[33] = 1;
   out_2030678393000793142[34] = 0;
   out_2030678393000793142[35] = 0;
   out_2030678393000793142[36] = 0;
   out_2030678393000793142[37] = 0;
   out_2030678393000793142[38] = 0;
   out_2030678393000793142[39] = 0;
   out_2030678393000793142[40] = 0;
   out_2030678393000793142[41] = 0;
   out_2030678393000793142[42] = 0;
   out_2030678393000793142[43] = 0;
   out_2030678393000793142[44] = 0;
   out_2030678393000793142[45] = 0;
   out_2030678393000793142[46] = 0;
   out_2030678393000793142[47] = 0;
   out_2030678393000793142[48] = 0;
   out_2030678393000793142[49] = 0;
   out_2030678393000793142[50] = 0;
   out_2030678393000793142[51] = 0;
   out_2030678393000793142[52] = 0;
   out_2030678393000793142[53] = 0;
   out_2030678393000793142[54] = 0;
   out_2030678393000793142[55] = 0;
   out_2030678393000793142[56] = 1;
   out_2030678393000793142[57] = 0;
   out_2030678393000793142[58] = 0;
   out_2030678393000793142[59] = 0;
   out_2030678393000793142[60] = 0;
   out_2030678393000793142[61] = 0;
   out_2030678393000793142[62] = 0;
   out_2030678393000793142[63] = 0;
   out_2030678393000793142[64] = 0;
   out_2030678393000793142[65] = 0;
}
void h_33(double *state, double *unused, double *out_7785328566767514480) {
   out_7785328566767514480[0] = state[16];
   out_7785328566767514480[1] = state[17];
   out_7785328566767514480[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2800678266253775632) {
   out_2800678266253775632[0] = 0;
   out_2800678266253775632[1] = 0;
   out_2800678266253775632[2] = 0;
   out_2800678266253775632[3] = 0;
   out_2800678266253775632[4] = 0;
   out_2800678266253775632[5] = 0;
   out_2800678266253775632[6] = 0;
   out_2800678266253775632[7] = 0;
   out_2800678266253775632[8] = 0;
   out_2800678266253775632[9] = 0;
   out_2800678266253775632[10] = 0;
   out_2800678266253775632[11] = 0;
   out_2800678266253775632[12] = 0;
   out_2800678266253775632[13] = 0;
   out_2800678266253775632[14] = 0;
   out_2800678266253775632[15] = 0;
   out_2800678266253775632[16] = 1;
   out_2800678266253775632[17] = 0;
   out_2800678266253775632[18] = 0;
   out_2800678266253775632[19] = 0;
   out_2800678266253775632[20] = 0;
   out_2800678266253775632[21] = 0;
   out_2800678266253775632[22] = 0;
   out_2800678266253775632[23] = 0;
   out_2800678266253775632[24] = 0;
   out_2800678266253775632[25] = 0;
   out_2800678266253775632[26] = 0;
   out_2800678266253775632[27] = 0;
   out_2800678266253775632[28] = 0;
   out_2800678266253775632[29] = 0;
   out_2800678266253775632[30] = 0;
   out_2800678266253775632[31] = 0;
   out_2800678266253775632[32] = 0;
   out_2800678266253775632[33] = 0;
   out_2800678266253775632[34] = 0;
   out_2800678266253775632[35] = 0;
   out_2800678266253775632[36] = 0;
   out_2800678266253775632[37] = 0;
   out_2800678266253775632[38] = 0;
   out_2800678266253775632[39] = 1;
   out_2800678266253775632[40] = 0;
   out_2800678266253775632[41] = 0;
   out_2800678266253775632[42] = 0;
   out_2800678266253775632[43] = 0;
   out_2800678266253775632[44] = 0;
   out_2800678266253775632[45] = 0;
   out_2800678266253775632[46] = 0;
   out_2800678266253775632[47] = 0;
   out_2800678266253775632[48] = 0;
   out_2800678266253775632[49] = 0;
   out_2800678266253775632[50] = 0;
   out_2800678266253775632[51] = 0;
   out_2800678266253775632[52] = 0;
   out_2800678266253775632[53] = 0;
   out_2800678266253775632[54] = 0;
   out_2800678266253775632[55] = 0;
   out_2800678266253775632[56] = 0;
   out_2800678266253775632[57] = 0;
   out_2800678266253775632[58] = 0;
   out_2800678266253775632[59] = 0;
   out_2800678266253775632[60] = 0;
   out_2800678266253775632[61] = 0;
   out_2800678266253775632[62] = 1;
   out_2800678266253775632[63] = 0;
   out_2800678266253775632[64] = 0;
   out_2800678266253775632[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7354899081148072319) {
  H(in_vec, out_7354899081148072319);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_926748312842793590) {
  err_fun(nom_x, delta_x, out_926748312842793590);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8553861514595348833) {
  inv_err_fun(nom_x, true_x, out_8553861514595348833);
}
void live_H_mod_fun(double *state, double *out_1090406756321095952) {
  H_mod_fun(state, out_1090406756321095952);
}
void live_f_fun(double *state, double dt, double *out_1607575285317213045) {
  f_fun(state,  dt, out_1607575285317213045);
}
void live_F_fun(double *state, double dt, double *out_3881758448010921799) {
  F_fun(state,  dt, out_3881758448010921799);
}
void live_h_4(double *state, double *unused, double *out_5351864317507456224) {
  h_4(state, unused, out_5351864317507456224);
}
void live_H_4(double *state, double *unused, double *out_9128846745444311004) {
  H_4(state, unused, out_9128846745444311004);
}
void live_h_9(double *state, double *unused, double *out_2329374119852845347) {
  h_9(state, unused, out_2329374119852845347);
}
void live_H_9(double *state, double *unused, double *out_2030678393000793142) {
  H_9(state, unused, out_2030678393000793142);
}
void live_h_10(double *state, double *unused, double *out_2828269157780052031) {
  h_10(state, unused, out_2828269157780052031);
}
void live_H_10(double *state, double *unused, double *out_1320877861754912006) {
  H_10(state, unused, out_1320877861754912006);
}
void live_h_12(double *state, double *unused, double *out_6763182500966395644) {
  h_12(state, unused, out_6763182500966395644);
}
void live_H_12(double *state, double *unused, double *out_1650769014582790120) {
  H_12(state, unused, out_1650769014582790120);
}
void live_h_35(double *state, double *unused, double *out_7964897784483847122) {
  h_35(state, unused, out_7964897784483847122);
}
void live_H_35(double *state, double *unused, double *out_5951235270892633236) {
  H_35(state, unused, out_5951235270892633236);
}
void live_h_32(double *state, double *unused, double *out_415144153704329373) {
  h_32(state, unused, out_415144153704329373);
}
void live_H_32(double *state, double *unused, double *out_4642638357729382318) {
  H_32(state, unused, out_4642638357729382318);
}
void live_h_13(double *state, double *unused, double *out_8033899621259556965) {
  h_13(state, unused, out_8033899621259556965);
}
void live_H_13(double *state, double *unused, double *out_1251369415488548331) {
  H_13(state, unused, out_1251369415488548331);
}
void live_h_14(double *state, double *unused, double *out_2329374119852845347) {
  h_14(state, unused, out_2329374119852845347);
}
void live_H_14(double *state, double *unused, double *out_2030678393000793142) {
  H_14(state, unused, out_2030678393000793142);
}
void live_h_33(double *state, double *unused, double *out_7785328566767514480) {
  h_33(state, unused, out_7785328566767514480);
}
void live_H_33(double *state, double *unused, double *out_2800678266253775632) {
  H_33(state, unused, out_2800678266253775632);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
