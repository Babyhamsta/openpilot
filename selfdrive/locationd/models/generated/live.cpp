#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8848504734180065506) {
   out_8848504734180065506[0] = 0;
   out_8848504734180065506[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8848504734180065506[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8848504734180065506[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8848504734180065506[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8848504734180065506[5] = -sin(in_vec[1]);
   out_8848504734180065506[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8848504734180065506[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8848504734180065506[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8848504734180065506[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8848504734180065506[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8848504734180065506[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8848504734180065506[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8848504734180065506[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8848504734180065506[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8848504734180065506[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8848504734180065506[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8848504734180065506[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1831232880786325784) {
   out_1831232880786325784[0] = delta_x[0] + nom_x[0];
   out_1831232880786325784[1] = delta_x[1] + nom_x[1];
   out_1831232880786325784[2] = delta_x[2] + nom_x[2];
   out_1831232880786325784[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1831232880786325784[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1831232880786325784[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1831232880786325784[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1831232880786325784[7] = delta_x[6] + nom_x[7];
   out_1831232880786325784[8] = delta_x[7] + nom_x[8];
   out_1831232880786325784[9] = delta_x[8] + nom_x[9];
   out_1831232880786325784[10] = delta_x[9] + nom_x[10];
   out_1831232880786325784[11] = delta_x[10] + nom_x[11];
   out_1831232880786325784[12] = delta_x[11] + nom_x[12];
   out_1831232880786325784[13] = delta_x[12] + nom_x[13];
   out_1831232880786325784[14] = delta_x[13] + nom_x[14];
   out_1831232880786325784[15] = delta_x[14] + nom_x[15];
   out_1831232880786325784[16] = delta_x[15] + nom_x[16];
   out_1831232880786325784[17] = delta_x[16] + nom_x[17];
   out_1831232880786325784[18] = delta_x[17] + nom_x[18];
   out_1831232880786325784[19] = delta_x[18] + nom_x[19];
   out_1831232880786325784[20] = delta_x[19] + nom_x[20];
   out_1831232880786325784[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1821126222288460850) {
   out_1821126222288460850[0] = -nom_x[0] + true_x[0];
   out_1821126222288460850[1] = -nom_x[1] + true_x[1];
   out_1821126222288460850[2] = -nom_x[2] + true_x[2];
   out_1821126222288460850[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1821126222288460850[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1821126222288460850[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1821126222288460850[6] = -nom_x[7] + true_x[7];
   out_1821126222288460850[7] = -nom_x[8] + true_x[8];
   out_1821126222288460850[8] = -nom_x[9] + true_x[9];
   out_1821126222288460850[9] = -nom_x[10] + true_x[10];
   out_1821126222288460850[10] = -nom_x[11] + true_x[11];
   out_1821126222288460850[11] = -nom_x[12] + true_x[12];
   out_1821126222288460850[12] = -nom_x[13] + true_x[13];
   out_1821126222288460850[13] = -nom_x[14] + true_x[14];
   out_1821126222288460850[14] = -nom_x[15] + true_x[15];
   out_1821126222288460850[15] = -nom_x[16] + true_x[16];
   out_1821126222288460850[16] = -nom_x[17] + true_x[17];
   out_1821126222288460850[17] = -nom_x[18] + true_x[18];
   out_1821126222288460850[18] = -nom_x[19] + true_x[19];
   out_1821126222288460850[19] = -nom_x[20] + true_x[20];
   out_1821126222288460850[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3908414896028627082) {
   out_3908414896028627082[0] = 1.0;
   out_3908414896028627082[1] = 0;
   out_3908414896028627082[2] = 0;
   out_3908414896028627082[3] = 0;
   out_3908414896028627082[4] = 0;
   out_3908414896028627082[5] = 0;
   out_3908414896028627082[6] = 0;
   out_3908414896028627082[7] = 0;
   out_3908414896028627082[8] = 0;
   out_3908414896028627082[9] = 0;
   out_3908414896028627082[10] = 0;
   out_3908414896028627082[11] = 0;
   out_3908414896028627082[12] = 0;
   out_3908414896028627082[13] = 0;
   out_3908414896028627082[14] = 0;
   out_3908414896028627082[15] = 0;
   out_3908414896028627082[16] = 0;
   out_3908414896028627082[17] = 0;
   out_3908414896028627082[18] = 0;
   out_3908414896028627082[19] = 0;
   out_3908414896028627082[20] = 0;
   out_3908414896028627082[21] = 0;
   out_3908414896028627082[22] = 1.0;
   out_3908414896028627082[23] = 0;
   out_3908414896028627082[24] = 0;
   out_3908414896028627082[25] = 0;
   out_3908414896028627082[26] = 0;
   out_3908414896028627082[27] = 0;
   out_3908414896028627082[28] = 0;
   out_3908414896028627082[29] = 0;
   out_3908414896028627082[30] = 0;
   out_3908414896028627082[31] = 0;
   out_3908414896028627082[32] = 0;
   out_3908414896028627082[33] = 0;
   out_3908414896028627082[34] = 0;
   out_3908414896028627082[35] = 0;
   out_3908414896028627082[36] = 0;
   out_3908414896028627082[37] = 0;
   out_3908414896028627082[38] = 0;
   out_3908414896028627082[39] = 0;
   out_3908414896028627082[40] = 0;
   out_3908414896028627082[41] = 0;
   out_3908414896028627082[42] = 0;
   out_3908414896028627082[43] = 0;
   out_3908414896028627082[44] = 1.0;
   out_3908414896028627082[45] = 0;
   out_3908414896028627082[46] = 0;
   out_3908414896028627082[47] = 0;
   out_3908414896028627082[48] = 0;
   out_3908414896028627082[49] = 0;
   out_3908414896028627082[50] = 0;
   out_3908414896028627082[51] = 0;
   out_3908414896028627082[52] = 0;
   out_3908414896028627082[53] = 0;
   out_3908414896028627082[54] = 0;
   out_3908414896028627082[55] = 0;
   out_3908414896028627082[56] = 0;
   out_3908414896028627082[57] = 0;
   out_3908414896028627082[58] = 0;
   out_3908414896028627082[59] = 0;
   out_3908414896028627082[60] = 0;
   out_3908414896028627082[61] = 0;
   out_3908414896028627082[62] = 0;
   out_3908414896028627082[63] = 0;
   out_3908414896028627082[64] = 0;
   out_3908414896028627082[65] = 0;
   out_3908414896028627082[66] = -0.5*state[4];
   out_3908414896028627082[67] = -0.5*state[5];
   out_3908414896028627082[68] = -0.5*state[6];
   out_3908414896028627082[69] = 0;
   out_3908414896028627082[70] = 0;
   out_3908414896028627082[71] = 0;
   out_3908414896028627082[72] = 0;
   out_3908414896028627082[73] = 0;
   out_3908414896028627082[74] = 0;
   out_3908414896028627082[75] = 0;
   out_3908414896028627082[76] = 0;
   out_3908414896028627082[77] = 0;
   out_3908414896028627082[78] = 0;
   out_3908414896028627082[79] = 0;
   out_3908414896028627082[80] = 0;
   out_3908414896028627082[81] = 0;
   out_3908414896028627082[82] = 0;
   out_3908414896028627082[83] = 0;
   out_3908414896028627082[84] = 0;
   out_3908414896028627082[85] = 0;
   out_3908414896028627082[86] = 0;
   out_3908414896028627082[87] = 0.5*state[3];
   out_3908414896028627082[88] = 0.5*state[6];
   out_3908414896028627082[89] = -0.5*state[5];
   out_3908414896028627082[90] = 0;
   out_3908414896028627082[91] = 0;
   out_3908414896028627082[92] = 0;
   out_3908414896028627082[93] = 0;
   out_3908414896028627082[94] = 0;
   out_3908414896028627082[95] = 0;
   out_3908414896028627082[96] = 0;
   out_3908414896028627082[97] = 0;
   out_3908414896028627082[98] = 0;
   out_3908414896028627082[99] = 0;
   out_3908414896028627082[100] = 0;
   out_3908414896028627082[101] = 0;
   out_3908414896028627082[102] = 0;
   out_3908414896028627082[103] = 0;
   out_3908414896028627082[104] = 0;
   out_3908414896028627082[105] = 0;
   out_3908414896028627082[106] = 0;
   out_3908414896028627082[107] = 0;
   out_3908414896028627082[108] = -0.5*state[6];
   out_3908414896028627082[109] = 0.5*state[3];
   out_3908414896028627082[110] = 0.5*state[4];
   out_3908414896028627082[111] = 0;
   out_3908414896028627082[112] = 0;
   out_3908414896028627082[113] = 0;
   out_3908414896028627082[114] = 0;
   out_3908414896028627082[115] = 0;
   out_3908414896028627082[116] = 0;
   out_3908414896028627082[117] = 0;
   out_3908414896028627082[118] = 0;
   out_3908414896028627082[119] = 0;
   out_3908414896028627082[120] = 0;
   out_3908414896028627082[121] = 0;
   out_3908414896028627082[122] = 0;
   out_3908414896028627082[123] = 0;
   out_3908414896028627082[124] = 0;
   out_3908414896028627082[125] = 0;
   out_3908414896028627082[126] = 0;
   out_3908414896028627082[127] = 0;
   out_3908414896028627082[128] = 0;
   out_3908414896028627082[129] = 0.5*state[5];
   out_3908414896028627082[130] = -0.5*state[4];
   out_3908414896028627082[131] = 0.5*state[3];
   out_3908414896028627082[132] = 0;
   out_3908414896028627082[133] = 0;
   out_3908414896028627082[134] = 0;
   out_3908414896028627082[135] = 0;
   out_3908414896028627082[136] = 0;
   out_3908414896028627082[137] = 0;
   out_3908414896028627082[138] = 0;
   out_3908414896028627082[139] = 0;
   out_3908414896028627082[140] = 0;
   out_3908414896028627082[141] = 0;
   out_3908414896028627082[142] = 0;
   out_3908414896028627082[143] = 0;
   out_3908414896028627082[144] = 0;
   out_3908414896028627082[145] = 0;
   out_3908414896028627082[146] = 0;
   out_3908414896028627082[147] = 0;
   out_3908414896028627082[148] = 0;
   out_3908414896028627082[149] = 0;
   out_3908414896028627082[150] = 0;
   out_3908414896028627082[151] = 0;
   out_3908414896028627082[152] = 0;
   out_3908414896028627082[153] = 1.0;
   out_3908414896028627082[154] = 0;
   out_3908414896028627082[155] = 0;
   out_3908414896028627082[156] = 0;
   out_3908414896028627082[157] = 0;
   out_3908414896028627082[158] = 0;
   out_3908414896028627082[159] = 0;
   out_3908414896028627082[160] = 0;
   out_3908414896028627082[161] = 0;
   out_3908414896028627082[162] = 0;
   out_3908414896028627082[163] = 0;
   out_3908414896028627082[164] = 0;
   out_3908414896028627082[165] = 0;
   out_3908414896028627082[166] = 0;
   out_3908414896028627082[167] = 0;
   out_3908414896028627082[168] = 0;
   out_3908414896028627082[169] = 0;
   out_3908414896028627082[170] = 0;
   out_3908414896028627082[171] = 0;
   out_3908414896028627082[172] = 0;
   out_3908414896028627082[173] = 0;
   out_3908414896028627082[174] = 0;
   out_3908414896028627082[175] = 1.0;
   out_3908414896028627082[176] = 0;
   out_3908414896028627082[177] = 0;
   out_3908414896028627082[178] = 0;
   out_3908414896028627082[179] = 0;
   out_3908414896028627082[180] = 0;
   out_3908414896028627082[181] = 0;
   out_3908414896028627082[182] = 0;
   out_3908414896028627082[183] = 0;
   out_3908414896028627082[184] = 0;
   out_3908414896028627082[185] = 0;
   out_3908414896028627082[186] = 0;
   out_3908414896028627082[187] = 0;
   out_3908414896028627082[188] = 0;
   out_3908414896028627082[189] = 0;
   out_3908414896028627082[190] = 0;
   out_3908414896028627082[191] = 0;
   out_3908414896028627082[192] = 0;
   out_3908414896028627082[193] = 0;
   out_3908414896028627082[194] = 0;
   out_3908414896028627082[195] = 0;
   out_3908414896028627082[196] = 0;
   out_3908414896028627082[197] = 1.0;
   out_3908414896028627082[198] = 0;
   out_3908414896028627082[199] = 0;
   out_3908414896028627082[200] = 0;
   out_3908414896028627082[201] = 0;
   out_3908414896028627082[202] = 0;
   out_3908414896028627082[203] = 0;
   out_3908414896028627082[204] = 0;
   out_3908414896028627082[205] = 0;
   out_3908414896028627082[206] = 0;
   out_3908414896028627082[207] = 0;
   out_3908414896028627082[208] = 0;
   out_3908414896028627082[209] = 0;
   out_3908414896028627082[210] = 0;
   out_3908414896028627082[211] = 0;
   out_3908414896028627082[212] = 0;
   out_3908414896028627082[213] = 0;
   out_3908414896028627082[214] = 0;
   out_3908414896028627082[215] = 0;
   out_3908414896028627082[216] = 0;
   out_3908414896028627082[217] = 0;
   out_3908414896028627082[218] = 0;
   out_3908414896028627082[219] = 1.0;
   out_3908414896028627082[220] = 0;
   out_3908414896028627082[221] = 0;
   out_3908414896028627082[222] = 0;
   out_3908414896028627082[223] = 0;
   out_3908414896028627082[224] = 0;
   out_3908414896028627082[225] = 0;
   out_3908414896028627082[226] = 0;
   out_3908414896028627082[227] = 0;
   out_3908414896028627082[228] = 0;
   out_3908414896028627082[229] = 0;
   out_3908414896028627082[230] = 0;
   out_3908414896028627082[231] = 0;
   out_3908414896028627082[232] = 0;
   out_3908414896028627082[233] = 0;
   out_3908414896028627082[234] = 0;
   out_3908414896028627082[235] = 0;
   out_3908414896028627082[236] = 0;
   out_3908414896028627082[237] = 0;
   out_3908414896028627082[238] = 0;
   out_3908414896028627082[239] = 0;
   out_3908414896028627082[240] = 0;
   out_3908414896028627082[241] = 1.0;
   out_3908414896028627082[242] = 0;
   out_3908414896028627082[243] = 0;
   out_3908414896028627082[244] = 0;
   out_3908414896028627082[245] = 0;
   out_3908414896028627082[246] = 0;
   out_3908414896028627082[247] = 0;
   out_3908414896028627082[248] = 0;
   out_3908414896028627082[249] = 0;
   out_3908414896028627082[250] = 0;
   out_3908414896028627082[251] = 0;
   out_3908414896028627082[252] = 0;
   out_3908414896028627082[253] = 0;
   out_3908414896028627082[254] = 0;
   out_3908414896028627082[255] = 0;
   out_3908414896028627082[256] = 0;
   out_3908414896028627082[257] = 0;
   out_3908414896028627082[258] = 0;
   out_3908414896028627082[259] = 0;
   out_3908414896028627082[260] = 0;
   out_3908414896028627082[261] = 0;
   out_3908414896028627082[262] = 0;
   out_3908414896028627082[263] = 1.0;
   out_3908414896028627082[264] = 0;
   out_3908414896028627082[265] = 0;
   out_3908414896028627082[266] = 0;
   out_3908414896028627082[267] = 0;
   out_3908414896028627082[268] = 0;
   out_3908414896028627082[269] = 0;
   out_3908414896028627082[270] = 0;
   out_3908414896028627082[271] = 0;
   out_3908414896028627082[272] = 0;
   out_3908414896028627082[273] = 0;
   out_3908414896028627082[274] = 0;
   out_3908414896028627082[275] = 0;
   out_3908414896028627082[276] = 0;
   out_3908414896028627082[277] = 0;
   out_3908414896028627082[278] = 0;
   out_3908414896028627082[279] = 0;
   out_3908414896028627082[280] = 0;
   out_3908414896028627082[281] = 0;
   out_3908414896028627082[282] = 0;
   out_3908414896028627082[283] = 0;
   out_3908414896028627082[284] = 0;
   out_3908414896028627082[285] = 1.0;
   out_3908414896028627082[286] = 0;
   out_3908414896028627082[287] = 0;
   out_3908414896028627082[288] = 0;
   out_3908414896028627082[289] = 0;
   out_3908414896028627082[290] = 0;
   out_3908414896028627082[291] = 0;
   out_3908414896028627082[292] = 0;
   out_3908414896028627082[293] = 0;
   out_3908414896028627082[294] = 0;
   out_3908414896028627082[295] = 0;
   out_3908414896028627082[296] = 0;
   out_3908414896028627082[297] = 0;
   out_3908414896028627082[298] = 0;
   out_3908414896028627082[299] = 0;
   out_3908414896028627082[300] = 0;
   out_3908414896028627082[301] = 0;
   out_3908414896028627082[302] = 0;
   out_3908414896028627082[303] = 0;
   out_3908414896028627082[304] = 0;
   out_3908414896028627082[305] = 0;
   out_3908414896028627082[306] = 0;
   out_3908414896028627082[307] = 1.0;
   out_3908414896028627082[308] = 0;
   out_3908414896028627082[309] = 0;
   out_3908414896028627082[310] = 0;
   out_3908414896028627082[311] = 0;
   out_3908414896028627082[312] = 0;
   out_3908414896028627082[313] = 0;
   out_3908414896028627082[314] = 0;
   out_3908414896028627082[315] = 0;
   out_3908414896028627082[316] = 0;
   out_3908414896028627082[317] = 0;
   out_3908414896028627082[318] = 0;
   out_3908414896028627082[319] = 0;
   out_3908414896028627082[320] = 0;
   out_3908414896028627082[321] = 0;
   out_3908414896028627082[322] = 0;
   out_3908414896028627082[323] = 0;
   out_3908414896028627082[324] = 0;
   out_3908414896028627082[325] = 0;
   out_3908414896028627082[326] = 0;
   out_3908414896028627082[327] = 0;
   out_3908414896028627082[328] = 0;
   out_3908414896028627082[329] = 1.0;
   out_3908414896028627082[330] = 0;
   out_3908414896028627082[331] = 0;
   out_3908414896028627082[332] = 0;
   out_3908414896028627082[333] = 0;
   out_3908414896028627082[334] = 0;
   out_3908414896028627082[335] = 0;
   out_3908414896028627082[336] = 0;
   out_3908414896028627082[337] = 0;
   out_3908414896028627082[338] = 0;
   out_3908414896028627082[339] = 0;
   out_3908414896028627082[340] = 0;
   out_3908414896028627082[341] = 0;
   out_3908414896028627082[342] = 0;
   out_3908414896028627082[343] = 0;
   out_3908414896028627082[344] = 0;
   out_3908414896028627082[345] = 0;
   out_3908414896028627082[346] = 0;
   out_3908414896028627082[347] = 0;
   out_3908414896028627082[348] = 0;
   out_3908414896028627082[349] = 0;
   out_3908414896028627082[350] = 0;
   out_3908414896028627082[351] = 1.0;
   out_3908414896028627082[352] = 0;
   out_3908414896028627082[353] = 0;
   out_3908414896028627082[354] = 0;
   out_3908414896028627082[355] = 0;
   out_3908414896028627082[356] = 0;
   out_3908414896028627082[357] = 0;
   out_3908414896028627082[358] = 0;
   out_3908414896028627082[359] = 0;
   out_3908414896028627082[360] = 0;
   out_3908414896028627082[361] = 0;
   out_3908414896028627082[362] = 0;
   out_3908414896028627082[363] = 0;
   out_3908414896028627082[364] = 0;
   out_3908414896028627082[365] = 0;
   out_3908414896028627082[366] = 0;
   out_3908414896028627082[367] = 0;
   out_3908414896028627082[368] = 0;
   out_3908414896028627082[369] = 0;
   out_3908414896028627082[370] = 0;
   out_3908414896028627082[371] = 0;
   out_3908414896028627082[372] = 0;
   out_3908414896028627082[373] = 1.0;
   out_3908414896028627082[374] = 0;
   out_3908414896028627082[375] = 0;
   out_3908414896028627082[376] = 0;
   out_3908414896028627082[377] = 0;
   out_3908414896028627082[378] = 0;
   out_3908414896028627082[379] = 0;
   out_3908414896028627082[380] = 0;
   out_3908414896028627082[381] = 0;
   out_3908414896028627082[382] = 0;
   out_3908414896028627082[383] = 0;
   out_3908414896028627082[384] = 0;
   out_3908414896028627082[385] = 0;
   out_3908414896028627082[386] = 0;
   out_3908414896028627082[387] = 0;
   out_3908414896028627082[388] = 0;
   out_3908414896028627082[389] = 0;
   out_3908414896028627082[390] = 0;
   out_3908414896028627082[391] = 0;
   out_3908414896028627082[392] = 0;
   out_3908414896028627082[393] = 0;
   out_3908414896028627082[394] = 0;
   out_3908414896028627082[395] = 1.0;
   out_3908414896028627082[396] = 0;
   out_3908414896028627082[397] = 0;
   out_3908414896028627082[398] = 0;
   out_3908414896028627082[399] = 0;
   out_3908414896028627082[400] = 0;
   out_3908414896028627082[401] = 0;
   out_3908414896028627082[402] = 0;
   out_3908414896028627082[403] = 0;
   out_3908414896028627082[404] = 0;
   out_3908414896028627082[405] = 0;
   out_3908414896028627082[406] = 0;
   out_3908414896028627082[407] = 0;
   out_3908414896028627082[408] = 0;
   out_3908414896028627082[409] = 0;
   out_3908414896028627082[410] = 0;
   out_3908414896028627082[411] = 0;
   out_3908414896028627082[412] = 0;
   out_3908414896028627082[413] = 0;
   out_3908414896028627082[414] = 0;
   out_3908414896028627082[415] = 0;
   out_3908414896028627082[416] = 0;
   out_3908414896028627082[417] = 1.0;
   out_3908414896028627082[418] = 0;
   out_3908414896028627082[419] = 0;
   out_3908414896028627082[420] = 0;
   out_3908414896028627082[421] = 0;
   out_3908414896028627082[422] = 0;
   out_3908414896028627082[423] = 0;
   out_3908414896028627082[424] = 0;
   out_3908414896028627082[425] = 0;
   out_3908414896028627082[426] = 0;
   out_3908414896028627082[427] = 0;
   out_3908414896028627082[428] = 0;
   out_3908414896028627082[429] = 0;
   out_3908414896028627082[430] = 0;
   out_3908414896028627082[431] = 0;
   out_3908414896028627082[432] = 0;
   out_3908414896028627082[433] = 0;
   out_3908414896028627082[434] = 0;
   out_3908414896028627082[435] = 0;
   out_3908414896028627082[436] = 0;
   out_3908414896028627082[437] = 0;
   out_3908414896028627082[438] = 0;
   out_3908414896028627082[439] = 1.0;
   out_3908414896028627082[440] = 0;
   out_3908414896028627082[441] = 0;
   out_3908414896028627082[442] = 0;
   out_3908414896028627082[443] = 0;
   out_3908414896028627082[444] = 0;
   out_3908414896028627082[445] = 0;
   out_3908414896028627082[446] = 0;
   out_3908414896028627082[447] = 0;
   out_3908414896028627082[448] = 0;
   out_3908414896028627082[449] = 0;
   out_3908414896028627082[450] = 0;
   out_3908414896028627082[451] = 0;
   out_3908414896028627082[452] = 0;
   out_3908414896028627082[453] = 0;
   out_3908414896028627082[454] = 0;
   out_3908414896028627082[455] = 0;
   out_3908414896028627082[456] = 0;
   out_3908414896028627082[457] = 0;
   out_3908414896028627082[458] = 0;
   out_3908414896028627082[459] = 0;
   out_3908414896028627082[460] = 0;
   out_3908414896028627082[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7892289561224452355) {
   out_7892289561224452355[0] = dt*state[7] + state[0];
   out_7892289561224452355[1] = dt*state[8] + state[1];
   out_7892289561224452355[2] = dt*state[9] + state[2];
   out_7892289561224452355[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7892289561224452355[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7892289561224452355[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7892289561224452355[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7892289561224452355[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7892289561224452355[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7892289561224452355[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7892289561224452355[10] = state[10];
   out_7892289561224452355[11] = state[11];
   out_7892289561224452355[12] = state[12];
   out_7892289561224452355[13] = state[13];
   out_7892289561224452355[14] = state[14];
   out_7892289561224452355[15] = state[15];
   out_7892289561224452355[16] = state[16];
   out_7892289561224452355[17] = state[17];
   out_7892289561224452355[18] = state[18];
   out_7892289561224452355[19] = state[19];
   out_7892289561224452355[20] = state[20];
   out_7892289561224452355[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8515547901378915655) {
   out_8515547901378915655[0] = 1;
   out_8515547901378915655[1] = 0;
   out_8515547901378915655[2] = 0;
   out_8515547901378915655[3] = 0;
   out_8515547901378915655[4] = 0;
   out_8515547901378915655[5] = 0;
   out_8515547901378915655[6] = dt;
   out_8515547901378915655[7] = 0;
   out_8515547901378915655[8] = 0;
   out_8515547901378915655[9] = 0;
   out_8515547901378915655[10] = 0;
   out_8515547901378915655[11] = 0;
   out_8515547901378915655[12] = 0;
   out_8515547901378915655[13] = 0;
   out_8515547901378915655[14] = 0;
   out_8515547901378915655[15] = 0;
   out_8515547901378915655[16] = 0;
   out_8515547901378915655[17] = 0;
   out_8515547901378915655[18] = 0;
   out_8515547901378915655[19] = 0;
   out_8515547901378915655[20] = 0;
   out_8515547901378915655[21] = 0;
   out_8515547901378915655[22] = 1;
   out_8515547901378915655[23] = 0;
   out_8515547901378915655[24] = 0;
   out_8515547901378915655[25] = 0;
   out_8515547901378915655[26] = 0;
   out_8515547901378915655[27] = 0;
   out_8515547901378915655[28] = dt;
   out_8515547901378915655[29] = 0;
   out_8515547901378915655[30] = 0;
   out_8515547901378915655[31] = 0;
   out_8515547901378915655[32] = 0;
   out_8515547901378915655[33] = 0;
   out_8515547901378915655[34] = 0;
   out_8515547901378915655[35] = 0;
   out_8515547901378915655[36] = 0;
   out_8515547901378915655[37] = 0;
   out_8515547901378915655[38] = 0;
   out_8515547901378915655[39] = 0;
   out_8515547901378915655[40] = 0;
   out_8515547901378915655[41] = 0;
   out_8515547901378915655[42] = 0;
   out_8515547901378915655[43] = 0;
   out_8515547901378915655[44] = 1;
   out_8515547901378915655[45] = 0;
   out_8515547901378915655[46] = 0;
   out_8515547901378915655[47] = 0;
   out_8515547901378915655[48] = 0;
   out_8515547901378915655[49] = 0;
   out_8515547901378915655[50] = dt;
   out_8515547901378915655[51] = 0;
   out_8515547901378915655[52] = 0;
   out_8515547901378915655[53] = 0;
   out_8515547901378915655[54] = 0;
   out_8515547901378915655[55] = 0;
   out_8515547901378915655[56] = 0;
   out_8515547901378915655[57] = 0;
   out_8515547901378915655[58] = 0;
   out_8515547901378915655[59] = 0;
   out_8515547901378915655[60] = 0;
   out_8515547901378915655[61] = 0;
   out_8515547901378915655[62] = 0;
   out_8515547901378915655[63] = 0;
   out_8515547901378915655[64] = 0;
   out_8515547901378915655[65] = 0;
   out_8515547901378915655[66] = 1;
   out_8515547901378915655[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8515547901378915655[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8515547901378915655[69] = 0;
   out_8515547901378915655[70] = 0;
   out_8515547901378915655[71] = 0;
   out_8515547901378915655[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8515547901378915655[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8515547901378915655[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8515547901378915655[75] = 0;
   out_8515547901378915655[76] = 0;
   out_8515547901378915655[77] = 0;
   out_8515547901378915655[78] = 0;
   out_8515547901378915655[79] = 0;
   out_8515547901378915655[80] = 0;
   out_8515547901378915655[81] = 0;
   out_8515547901378915655[82] = 0;
   out_8515547901378915655[83] = 0;
   out_8515547901378915655[84] = 0;
   out_8515547901378915655[85] = 0;
   out_8515547901378915655[86] = 0;
   out_8515547901378915655[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8515547901378915655[88] = 1;
   out_8515547901378915655[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8515547901378915655[90] = 0;
   out_8515547901378915655[91] = 0;
   out_8515547901378915655[92] = 0;
   out_8515547901378915655[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8515547901378915655[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8515547901378915655[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8515547901378915655[96] = 0;
   out_8515547901378915655[97] = 0;
   out_8515547901378915655[98] = 0;
   out_8515547901378915655[99] = 0;
   out_8515547901378915655[100] = 0;
   out_8515547901378915655[101] = 0;
   out_8515547901378915655[102] = 0;
   out_8515547901378915655[103] = 0;
   out_8515547901378915655[104] = 0;
   out_8515547901378915655[105] = 0;
   out_8515547901378915655[106] = 0;
   out_8515547901378915655[107] = 0;
   out_8515547901378915655[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8515547901378915655[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8515547901378915655[110] = 1;
   out_8515547901378915655[111] = 0;
   out_8515547901378915655[112] = 0;
   out_8515547901378915655[113] = 0;
   out_8515547901378915655[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8515547901378915655[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8515547901378915655[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8515547901378915655[117] = 0;
   out_8515547901378915655[118] = 0;
   out_8515547901378915655[119] = 0;
   out_8515547901378915655[120] = 0;
   out_8515547901378915655[121] = 0;
   out_8515547901378915655[122] = 0;
   out_8515547901378915655[123] = 0;
   out_8515547901378915655[124] = 0;
   out_8515547901378915655[125] = 0;
   out_8515547901378915655[126] = 0;
   out_8515547901378915655[127] = 0;
   out_8515547901378915655[128] = 0;
   out_8515547901378915655[129] = 0;
   out_8515547901378915655[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8515547901378915655[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8515547901378915655[132] = 1;
   out_8515547901378915655[133] = 0;
   out_8515547901378915655[134] = 0;
   out_8515547901378915655[135] = 0;
   out_8515547901378915655[136] = 0;
   out_8515547901378915655[137] = 0;
   out_8515547901378915655[138] = 0;
   out_8515547901378915655[139] = 0;
   out_8515547901378915655[140] = 0;
   out_8515547901378915655[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8515547901378915655[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8515547901378915655[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8515547901378915655[144] = 0;
   out_8515547901378915655[145] = 0;
   out_8515547901378915655[146] = 0;
   out_8515547901378915655[147] = 0;
   out_8515547901378915655[148] = 0;
   out_8515547901378915655[149] = 0;
   out_8515547901378915655[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8515547901378915655[151] = 0;
   out_8515547901378915655[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8515547901378915655[153] = 0;
   out_8515547901378915655[154] = 1;
   out_8515547901378915655[155] = 0;
   out_8515547901378915655[156] = 0;
   out_8515547901378915655[157] = 0;
   out_8515547901378915655[158] = 0;
   out_8515547901378915655[159] = 0;
   out_8515547901378915655[160] = 0;
   out_8515547901378915655[161] = 0;
   out_8515547901378915655[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8515547901378915655[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8515547901378915655[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8515547901378915655[165] = 0;
   out_8515547901378915655[166] = 0;
   out_8515547901378915655[167] = 0;
   out_8515547901378915655[168] = 0;
   out_8515547901378915655[169] = 0;
   out_8515547901378915655[170] = 0;
   out_8515547901378915655[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8515547901378915655[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8515547901378915655[173] = 0;
   out_8515547901378915655[174] = 0;
   out_8515547901378915655[175] = 0;
   out_8515547901378915655[176] = 1;
   out_8515547901378915655[177] = 0;
   out_8515547901378915655[178] = 0;
   out_8515547901378915655[179] = 0;
   out_8515547901378915655[180] = 0;
   out_8515547901378915655[181] = 0;
   out_8515547901378915655[182] = 0;
   out_8515547901378915655[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8515547901378915655[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8515547901378915655[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8515547901378915655[186] = 0;
   out_8515547901378915655[187] = 0;
   out_8515547901378915655[188] = 0;
   out_8515547901378915655[189] = 0;
   out_8515547901378915655[190] = 0;
   out_8515547901378915655[191] = 0;
   out_8515547901378915655[192] = 0;
   out_8515547901378915655[193] = 0;
   out_8515547901378915655[194] = 0;
   out_8515547901378915655[195] = 0;
   out_8515547901378915655[196] = 0;
   out_8515547901378915655[197] = 0;
   out_8515547901378915655[198] = 1;
   out_8515547901378915655[199] = 0;
   out_8515547901378915655[200] = 0;
   out_8515547901378915655[201] = 0;
   out_8515547901378915655[202] = 0;
   out_8515547901378915655[203] = 0;
   out_8515547901378915655[204] = 0;
   out_8515547901378915655[205] = 0;
   out_8515547901378915655[206] = 0;
   out_8515547901378915655[207] = 0;
   out_8515547901378915655[208] = 0;
   out_8515547901378915655[209] = 0;
   out_8515547901378915655[210] = 0;
   out_8515547901378915655[211] = 0;
   out_8515547901378915655[212] = 0;
   out_8515547901378915655[213] = 0;
   out_8515547901378915655[214] = 0;
   out_8515547901378915655[215] = 0;
   out_8515547901378915655[216] = 0;
   out_8515547901378915655[217] = 0;
   out_8515547901378915655[218] = 0;
   out_8515547901378915655[219] = 0;
   out_8515547901378915655[220] = 1;
   out_8515547901378915655[221] = 0;
   out_8515547901378915655[222] = 0;
   out_8515547901378915655[223] = 0;
   out_8515547901378915655[224] = 0;
   out_8515547901378915655[225] = 0;
   out_8515547901378915655[226] = 0;
   out_8515547901378915655[227] = 0;
   out_8515547901378915655[228] = 0;
   out_8515547901378915655[229] = 0;
   out_8515547901378915655[230] = 0;
   out_8515547901378915655[231] = 0;
   out_8515547901378915655[232] = 0;
   out_8515547901378915655[233] = 0;
   out_8515547901378915655[234] = 0;
   out_8515547901378915655[235] = 0;
   out_8515547901378915655[236] = 0;
   out_8515547901378915655[237] = 0;
   out_8515547901378915655[238] = 0;
   out_8515547901378915655[239] = 0;
   out_8515547901378915655[240] = 0;
   out_8515547901378915655[241] = 0;
   out_8515547901378915655[242] = 1;
   out_8515547901378915655[243] = 0;
   out_8515547901378915655[244] = 0;
   out_8515547901378915655[245] = 0;
   out_8515547901378915655[246] = 0;
   out_8515547901378915655[247] = 0;
   out_8515547901378915655[248] = 0;
   out_8515547901378915655[249] = 0;
   out_8515547901378915655[250] = 0;
   out_8515547901378915655[251] = 0;
   out_8515547901378915655[252] = 0;
   out_8515547901378915655[253] = 0;
   out_8515547901378915655[254] = 0;
   out_8515547901378915655[255] = 0;
   out_8515547901378915655[256] = 0;
   out_8515547901378915655[257] = 0;
   out_8515547901378915655[258] = 0;
   out_8515547901378915655[259] = 0;
   out_8515547901378915655[260] = 0;
   out_8515547901378915655[261] = 0;
   out_8515547901378915655[262] = 0;
   out_8515547901378915655[263] = 0;
   out_8515547901378915655[264] = 1;
   out_8515547901378915655[265] = 0;
   out_8515547901378915655[266] = 0;
   out_8515547901378915655[267] = 0;
   out_8515547901378915655[268] = 0;
   out_8515547901378915655[269] = 0;
   out_8515547901378915655[270] = 0;
   out_8515547901378915655[271] = 0;
   out_8515547901378915655[272] = 0;
   out_8515547901378915655[273] = 0;
   out_8515547901378915655[274] = 0;
   out_8515547901378915655[275] = 0;
   out_8515547901378915655[276] = 0;
   out_8515547901378915655[277] = 0;
   out_8515547901378915655[278] = 0;
   out_8515547901378915655[279] = 0;
   out_8515547901378915655[280] = 0;
   out_8515547901378915655[281] = 0;
   out_8515547901378915655[282] = 0;
   out_8515547901378915655[283] = 0;
   out_8515547901378915655[284] = 0;
   out_8515547901378915655[285] = 0;
   out_8515547901378915655[286] = 1;
   out_8515547901378915655[287] = 0;
   out_8515547901378915655[288] = 0;
   out_8515547901378915655[289] = 0;
   out_8515547901378915655[290] = 0;
   out_8515547901378915655[291] = 0;
   out_8515547901378915655[292] = 0;
   out_8515547901378915655[293] = 0;
   out_8515547901378915655[294] = 0;
   out_8515547901378915655[295] = 0;
   out_8515547901378915655[296] = 0;
   out_8515547901378915655[297] = 0;
   out_8515547901378915655[298] = 0;
   out_8515547901378915655[299] = 0;
   out_8515547901378915655[300] = 0;
   out_8515547901378915655[301] = 0;
   out_8515547901378915655[302] = 0;
   out_8515547901378915655[303] = 0;
   out_8515547901378915655[304] = 0;
   out_8515547901378915655[305] = 0;
   out_8515547901378915655[306] = 0;
   out_8515547901378915655[307] = 0;
   out_8515547901378915655[308] = 1;
   out_8515547901378915655[309] = 0;
   out_8515547901378915655[310] = 0;
   out_8515547901378915655[311] = 0;
   out_8515547901378915655[312] = 0;
   out_8515547901378915655[313] = 0;
   out_8515547901378915655[314] = 0;
   out_8515547901378915655[315] = 0;
   out_8515547901378915655[316] = 0;
   out_8515547901378915655[317] = 0;
   out_8515547901378915655[318] = 0;
   out_8515547901378915655[319] = 0;
   out_8515547901378915655[320] = 0;
   out_8515547901378915655[321] = 0;
   out_8515547901378915655[322] = 0;
   out_8515547901378915655[323] = 0;
   out_8515547901378915655[324] = 0;
   out_8515547901378915655[325] = 0;
   out_8515547901378915655[326] = 0;
   out_8515547901378915655[327] = 0;
   out_8515547901378915655[328] = 0;
   out_8515547901378915655[329] = 0;
   out_8515547901378915655[330] = 1;
   out_8515547901378915655[331] = 0;
   out_8515547901378915655[332] = 0;
   out_8515547901378915655[333] = 0;
   out_8515547901378915655[334] = 0;
   out_8515547901378915655[335] = 0;
   out_8515547901378915655[336] = 0;
   out_8515547901378915655[337] = 0;
   out_8515547901378915655[338] = 0;
   out_8515547901378915655[339] = 0;
   out_8515547901378915655[340] = 0;
   out_8515547901378915655[341] = 0;
   out_8515547901378915655[342] = 0;
   out_8515547901378915655[343] = 0;
   out_8515547901378915655[344] = 0;
   out_8515547901378915655[345] = 0;
   out_8515547901378915655[346] = 0;
   out_8515547901378915655[347] = 0;
   out_8515547901378915655[348] = 0;
   out_8515547901378915655[349] = 0;
   out_8515547901378915655[350] = 0;
   out_8515547901378915655[351] = 0;
   out_8515547901378915655[352] = 1;
   out_8515547901378915655[353] = 0;
   out_8515547901378915655[354] = 0;
   out_8515547901378915655[355] = 0;
   out_8515547901378915655[356] = 0;
   out_8515547901378915655[357] = 0;
   out_8515547901378915655[358] = 0;
   out_8515547901378915655[359] = 0;
   out_8515547901378915655[360] = 0;
   out_8515547901378915655[361] = 0;
   out_8515547901378915655[362] = 0;
   out_8515547901378915655[363] = 0;
   out_8515547901378915655[364] = 0;
   out_8515547901378915655[365] = 0;
   out_8515547901378915655[366] = 0;
   out_8515547901378915655[367] = 0;
   out_8515547901378915655[368] = 0;
   out_8515547901378915655[369] = 0;
   out_8515547901378915655[370] = 0;
   out_8515547901378915655[371] = 0;
   out_8515547901378915655[372] = 0;
   out_8515547901378915655[373] = 0;
   out_8515547901378915655[374] = 1;
   out_8515547901378915655[375] = 0;
   out_8515547901378915655[376] = 0;
   out_8515547901378915655[377] = 0;
   out_8515547901378915655[378] = 0;
   out_8515547901378915655[379] = 0;
   out_8515547901378915655[380] = 0;
   out_8515547901378915655[381] = 0;
   out_8515547901378915655[382] = 0;
   out_8515547901378915655[383] = 0;
   out_8515547901378915655[384] = 0;
   out_8515547901378915655[385] = 0;
   out_8515547901378915655[386] = 0;
   out_8515547901378915655[387] = 0;
   out_8515547901378915655[388] = 0;
   out_8515547901378915655[389] = 0;
   out_8515547901378915655[390] = 0;
   out_8515547901378915655[391] = 0;
   out_8515547901378915655[392] = 0;
   out_8515547901378915655[393] = 0;
   out_8515547901378915655[394] = 0;
   out_8515547901378915655[395] = 0;
   out_8515547901378915655[396] = 1;
   out_8515547901378915655[397] = 0;
   out_8515547901378915655[398] = 0;
   out_8515547901378915655[399] = 0;
   out_8515547901378915655[400] = 0;
   out_8515547901378915655[401] = 0;
   out_8515547901378915655[402] = 0;
   out_8515547901378915655[403] = 0;
   out_8515547901378915655[404] = 0;
   out_8515547901378915655[405] = 0;
   out_8515547901378915655[406] = 0;
   out_8515547901378915655[407] = 0;
   out_8515547901378915655[408] = 0;
   out_8515547901378915655[409] = 0;
   out_8515547901378915655[410] = 0;
   out_8515547901378915655[411] = 0;
   out_8515547901378915655[412] = 0;
   out_8515547901378915655[413] = 0;
   out_8515547901378915655[414] = 0;
   out_8515547901378915655[415] = 0;
   out_8515547901378915655[416] = 0;
   out_8515547901378915655[417] = 0;
   out_8515547901378915655[418] = 1;
   out_8515547901378915655[419] = 0;
   out_8515547901378915655[420] = 0;
   out_8515547901378915655[421] = 0;
   out_8515547901378915655[422] = 0;
   out_8515547901378915655[423] = 0;
   out_8515547901378915655[424] = 0;
   out_8515547901378915655[425] = 0;
   out_8515547901378915655[426] = 0;
   out_8515547901378915655[427] = 0;
   out_8515547901378915655[428] = 0;
   out_8515547901378915655[429] = 0;
   out_8515547901378915655[430] = 0;
   out_8515547901378915655[431] = 0;
   out_8515547901378915655[432] = 0;
   out_8515547901378915655[433] = 0;
   out_8515547901378915655[434] = 0;
   out_8515547901378915655[435] = 0;
   out_8515547901378915655[436] = 0;
   out_8515547901378915655[437] = 0;
   out_8515547901378915655[438] = 0;
   out_8515547901378915655[439] = 0;
   out_8515547901378915655[440] = 1;
}
void h_4(double *state, double *unused, double *out_8679006882303680840) {
   out_8679006882303680840[0] = state[10] + state[13];
   out_8679006882303680840[1] = state[11] + state[14];
   out_8679006882303680840[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5990756093177091639) {
   out_5990756093177091639[0] = 0;
   out_5990756093177091639[1] = 0;
   out_5990756093177091639[2] = 0;
   out_5990756093177091639[3] = 0;
   out_5990756093177091639[4] = 0;
   out_5990756093177091639[5] = 0;
   out_5990756093177091639[6] = 0;
   out_5990756093177091639[7] = 0;
   out_5990756093177091639[8] = 0;
   out_5990756093177091639[9] = 0;
   out_5990756093177091639[10] = 1;
   out_5990756093177091639[11] = 0;
   out_5990756093177091639[12] = 0;
   out_5990756093177091639[13] = 1;
   out_5990756093177091639[14] = 0;
   out_5990756093177091639[15] = 0;
   out_5990756093177091639[16] = 0;
   out_5990756093177091639[17] = 0;
   out_5990756093177091639[18] = 0;
   out_5990756093177091639[19] = 0;
   out_5990756093177091639[20] = 0;
   out_5990756093177091639[21] = 0;
   out_5990756093177091639[22] = 0;
   out_5990756093177091639[23] = 0;
   out_5990756093177091639[24] = 0;
   out_5990756093177091639[25] = 0;
   out_5990756093177091639[26] = 0;
   out_5990756093177091639[27] = 0;
   out_5990756093177091639[28] = 0;
   out_5990756093177091639[29] = 0;
   out_5990756093177091639[30] = 0;
   out_5990756093177091639[31] = 0;
   out_5990756093177091639[32] = 0;
   out_5990756093177091639[33] = 1;
   out_5990756093177091639[34] = 0;
   out_5990756093177091639[35] = 0;
   out_5990756093177091639[36] = 1;
   out_5990756093177091639[37] = 0;
   out_5990756093177091639[38] = 0;
   out_5990756093177091639[39] = 0;
   out_5990756093177091639[40] = 0;
   out_5990756093177091639[41] = 0;
   out_5990756093177091639[42] = 0;
   out_5990756093177091639[43] = 0;
   out_5990756093177091639[44] = 0;
   out_5990756093177091639[45] = 0;
   out_5990756093177091639[46] = 0;
   out_5990756093177091639[47] = 0;
   out_5990756093177091639[48] = 0;
   out_5990756093177091639[49] = 0;
   out_5990756093177091639[50] = 0;
   out_5990756093177091639[51] = 0;
   out_5990756093177091639[52] = 0;
   out_5990756093177091639[53] = 0;
   out_5990756093177091639[54] = 0;
   out_5990756093177091639[55] = 0;
   out_5990756093177091639[56] = 1;
   out_5990756093177091639[57] = 0;
   out_5990756093177091639[58] = 0;
   out_5990756093177091639[59] = 1;
   out_5990756093177091639[60] = 0;
   out_5990756093177091639[61] = 0;
   out_5990756093177091639[62] = 0;
   out_5990756093177091639[63] = 0;
   out_5990756093177091639[64] = 0;
   out_5990756093177091639[65] = 0;
}
void h_9(double *state, double *unused, double *out_2409868858877289513) {
   out_2409868858877289513[0] = state[10];
   out_2409868858877289513[1] = state[11];
   out_2409868858877289513[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1296462842087355831) {
   out_1296462842087355831[0] = 0;
   out_1296462842087355831[1] = 0;
   out_1296462842087355831[2] = 0;
   out_1296462842087355831[3] = 0;
   out_1296462842087355831[4] = 0;
   out_1296462842087355831[5] = 0;
   out_1296462842087355831[6] = 0;
   out_1296462842087355831[7] = 0;
   out_1296462842087355831[8] = 0;
   out_1296462842087355831[9] = 0;
   out_1296462842087355831[10] = 1;
   out_1296462842087355831[11] = 0;
   out_1296462842087355831[12] = 0;
   out_1296462842087355831[13] = 0;
   out_1296462842087355831[14] = 0;
   out_1296462842087355831[15] = 0;
   out_1296462842087355831[16] = 0;
   out_1296462842087355831[17] = 0;
   out_1296462842087355831[18] = 0;
   out_1296462842087355831[19] = 0;
   out_1296462842087355831[20] = 0;
   out_1296462842087355831[21] = 0;
   out_1296462842087355831[22] = 0;
   out_1296462842087355831[23] = 0;
   out_1296462842087355831[24] = 0;
   out_1296462842087355831[25] = 0;
   out_1296462842087355831[26] = 0;
   out_1296462842087355831[27] = 0;
   out_1296462842087355831[28] = 0;
   out_1296462842087355831[29] = 0;
   out_1296462842087355831[30] = 0;
   out_1296462842087355831[31] = 0;
   out_1296462842087355831[32] = 0;
   out_1296462842087355831[33] = 1;
   out_1296462842087355831[34] = 0;
   out_1296462842087355831[35] = 0;
   out_1296462842087355831[36] = 0;
   out_1296462842087355831[37] = 0;
   out_1296462842087355831[38] = 0;
   out_1296462842087355831[39] = 0;
   out_1296462842087355831[40] = 0;
   out_1296462842087355831[41] = 0;
   out_1296462842087355831[42] = 0;
   out_1296462842087355831[43] = 0;
   out_1296462842087355831[44] = 0;
   out_1296462842087355831[45] = 0;
   out_1296462842087355831[46] = 0;
   out_1296462842087355831[47] = 0;
   out_1296462842087355831[48] = 0;
   out_1296462842087355831[49] = 0;
   out_1296462842087355831[50] = 0;
   out_1296462842087355831[51] = 0;
   out_1296462842087355831[52] = 0;
   out_1296462842087355831[53] = 0;
   out_1296462842087355831[54] = 0;
   out_1296462842087355831[55] = 0;
   out_1296462842087355831[56] = 1;
   out_1296462842087355831[57] = 0;
   out_1296462842087355831[58] = 0;
   out_1296462842087355831[59] = 0;
   out_1296462842087355831[60] = 0;
   out_1296462842087355831[61] = 0;
   out_1296462842087355831[62] = 0;
   out_1296462842087355831[63] = 0;
   out_1296462842087355831[64] = 0;
   out_1296462842087355831[65] = 0;
}
void h_10(double *state, double *unused, double *out_120384295002916867) {
   out_120384295002916867[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_120384295002916867[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_120384295002916867[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3553941899114977873) {
   out_3553941899114977873[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3553941899114977873[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3553941899114977873[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3553941899114977873[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3553941899114977873[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3553941899114977873[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3553941899114977873[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3553941899114977873[7] = 0;
   out_3553941899114977873[8] = 0;
   out_3553941899114977873[9] = 0;
   out_3553941899114977873[10] = 0;
   out_3553941899114977873[11] = 0;
   out_3553941899114977873[12] = 0;
   out_3553941899114977873[13] = 0;
   out_3553941899114977873[14] = 0;
   out_3553941899114977873[15] = 0;
   out_3553941899114977873[16] = 1;
   out_3553941899114977873[17] = 0;
   out_3553941899114977873[18] = 0;
   out_3553941899114977873[19] = 1;
   out_3553941899114977873[20] = 0;
   out_3553941899114977873[21] = 0;
   out_3553941899114977873[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3553941899114977873[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3553941899114977873[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3553941899114977873[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3553941899114977873[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3553941899114977873[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3553941899114977873[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3553941899114977873[29] = 0;
   out_3553941899114977873[30] = 0;
   out_3553941899114977873[31] = 0;
   out_3553941899114977873[32] = 0;
   out_3553941899114977873[33] = 0;
   out_3553941899114977873[34] = 0;
   out_3553941899114977873[35] = 0;
   out_3553941899114977873[36] = 0;
   out_3553941899114977873[37] = 0;
   out_3553941899114977873[38] = 0;
   out_3553941899114977873[39] = 1;
   out_3553941899114977873[40] = 0;
   out_3553941899114977873[41] = 0;
   out_3553941899114977873[42] = 1;
   out_3553941899114977873[43] = 0;
   out_3553941899114977873[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3553941899114977873[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3553941899114977873[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3553941899114977873[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3553941899114977873[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3553941899114977873[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3553941899114977873[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3553941899114977873[51] = 0;
   out_3553941899114977873[52] = 0;
   out_3553941899114977873[53] = 0;
   out_3553941899114977873[54] = 0;
   out_3553941899114977873[55] = 0;
   out_3553941899114977873[56] = 0;
   out_3553941899114977873[57] = 0;
   out_3553941899114977873[58] = 0;
   out_3553941899114977873[59] = 0;
   out_3553941899114977873[60] = 0;
   out_3553941899114977873[61] = 0;
   out_3553941899114977873[62] = 1;
   out_3553941899114977873[63] = 0;
   out_3553941899114977873[64] = 0;
   out_3553941899114977873[65] = 1;
}
void h_12(double *state, double *unused, double *out_7598365100289183419) {
   out_7598365100289183419[0] = state[0];
   out_7598365100289183419[1] = state[1];
   out_7598365100289183419[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1676372220505358853) {
   out_1676372220505358853[0] = 1;
   out_1676372220505358853[1] = 0;
   out_1676372220505358853[2] = 0;
   out_1676372220505358853[3] = 0;
   out_1676372220505358853[4] = 0;
   out_1676372220505358853[5] = 0;
   out_1676372220505358853[6] = 0;
   out_1676372220505358853[7] = 0;
   out_1676372220505358853[8] = 0;
   out_1676372220505358853[9] = 0;
   out_1676372220505358853[10] = 0;
   out_1676372220505358853[11] = 0;
   out_1676372220505358853[12] = 0;
   out_1676372220505358853[13] = 0;
   out_1676372220505358853[14] = 0;
   out_1676372220505358853[15] = 0;
   out_1676372220505358853[16] = 0;
   out_1676372220505358853[17] = 0;
   out_1676372220505358853[18] = 0;
   out_1676372220505358853[19] = 0;
   out_1676372220505358853[20] = 0;
   out_1676372220505358853[21] = 0;
   out_1676372220505358853[22] = 0;
   out_1676372220505358853[23] = 1;
   out_1676372220505358853[24] = 0;
   out_1676372220505358853[25] = 0;
   out_1676372220505358853[26] = 0;
   out_1676372220505358853[27] = 0;
   out_1676372220505358853[28] = 0;
   out_1676372220505358853[29] = 0;
   out_1676372220505358853[30] = 0;
   out_1676372220505358853[31] = 0;
   out_1676372220505358853[32] = 0;
   out_1676372220505358853[33] = 0;
   out_1676372220505358853[34] = 0;
   out_1676372220505358853[35] = 0;
   out_1676372220505358853[36] = 0;
   out_1676372220505358853[37] = 0;
   out_1676372220505358853[38] = 0;
   out_1676372220505358853[39] = 0;
   out_1676372220505358853[40] = 0;
   out_1676372220505358853[41] = 0;
   out_1676372220505358853[42] = 0;
   out_1676372220505358853[43] = 0;
   out_1676372220505358853[44] = 0;
   out_1676372220505358853[45] = 0;
   out_1676372220505358853[46] = 1;
   out_1676372220505358853[47] = 0;
   out_1676372220505358853[48] = 0;
   out_1676372220505358853[49] = 0;
   out_1676372220505358853[50] = 0;
   out_1676372220505358853[51] = 0;
   out_1676372220505358853[52] = 0;
   out_1676372220505358853[53] = 0;
   out_1676372220505358853[54] = 0;
   out_1676372220505358853[55] = 0;
   out_1676372220505358853[56] = 0;
   out_1676372220505358853[57] = 0;
   out_1676372220505358853[58] = 0;
   out_1676372220505358853[59] = 0;
   out_1676372220505358853[60] = 0;
   out_1676372220505358853[61] = 0;
   out_1676372220505358853[62] = 0;
   out_1676372220505358853[63] = 0;
   out_1676372220505358853[64] = 0;
   out_1676372220505358853[65] = 0;
}
void h_35(double *state, double *unused, double *out_2019650774056222022) {
   out_2019650774056222022[0] = state[7];
   out_2019650774056222022[1] = state[8];
   out_2019650774056222022[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4421935252830372562) {
   out_4421935252830372562[0] = 0;
   out_4421935252830372562[1] = 0;
   out_4421935252830372562[2] = 0;
   out_4421935252830372562[3] = 0;
   out_4421935252830372562[4] = 0;
   out_4421935252830372562[5] = 0;
   out_4421935252830372562[6] = 0;
   out_4421935252830372562[7] = 1;
   out_4421935252830372562[8] = 0;
   out_4421935252830372562[9] = 0;
   out_4421935252830372562[10] = 0;
   out_4421935252830372562[11] = 0;
   out_4421935252830372562[12] = 0;
   out_4421935252830372562[13] = 0;
   out_4421935252830372562[14] = 0;
   out_4421935252830372562[15] = 0;
   out_4421935252830372562[16] = 0;
   out_4421935252830372562[17] = 0;
   out_4421935252830372562[18] = 0;
   out_4421935252830372562[19] = 0;
   out_4421935252830372562[20] = 0;
   out_4421935252830372562[21] = 0;
   out_4421935252830372562[22] = 0;
   out_4421935252830372562[23] = 0;
   out_4421935252830372562[24] = 0;
   out_4421935252830372562[25] = 0;
   out_4421935252830372562[26] = 0;
   out_4421935252830372562[27] = 0;
   out_4421935252830372562[28] = 0;
   out_4421935252830372562[29] = 0;
   out_4421935252830372562[30] = 1;
   out_4421935252830372562[31] = 0;
   out_4421935252830372562[32] = 0;
   out_4421935252830372562[33] = 0;
   out_4421935252830372562[34] = 0;
   out_4421935252830372562[35] = 0;
   out_4421935252830372562[36] = 0;
   out_4421935252830372562[37] = 0;
   out_4421935252830372562[38] = 0;
   out_4421935252830372562[39] = 0;
   out_4421935252830372562[40] = 0;
   out_4421935252830372562[41] = 0;
   out_4421935252830372562[42] = 0;
   out_4421935252830372562[43] = 0;
   out_4421935252830372562[44] = 0;
   out_4421935252830372562[45] = 0;
   out_4421935252830372562[46] = 0;
   out_4421935252830372562[47] = 0;
   out_4421935252830372562[48] = 0;
   out_4421935252830372562[49] = 0;
   out_4421935252830372562[50] = 0;
   out_4421935252830372562[51] = 0;
   out_4421935252830372562[52] = 0;
   out_4421935252830372562[53] = 1;
   out_4421935252830372562[54] = 0;
   out_4421935252830372562[55] = 0;
   out_4421935252830372562[56] = 0;
   out_4421935252830372562[57] = 0;
   out_4421935252830372562[58] = 0;
   out_4421935252830372562[59] = 0;
   out_4421935252830372562[60] = 0;
   out_4421935252830372562[61] = 0;
   out_4421935252830372562[62] = 0;
   out_4421935252830372562[63] = 0;
   out_4421935252830372562[64] = 0;
   out_4421935252830372562[65] = 0;
}
void h_32(double *state, double *unused, double *out_5076051470792844394) {
   out_5076051470792844394[0] = state[3];
   out_5076051470792844394[1] = state[4];
   out_5076051470792844394[2] = state[5];
   out_5076051470792844394[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2492929250863743794) {
   out_2492929250863743794[0] = 0;
   out_2492929250863743794[1] = 0;
   out_2492929250863743794[2] = 0;
   out_2492929250863743794[3] = 1;
   out_2492929250863743794[4] = 0;
   out_2492929250863743794[5] = 0;
   out_2492929250863743794[6] = 0;
   out_2492929250863743794[7] = 0;
   out_2492929250863743794[8] = 0;
   out_2492929250863743794[9] = 0;
   out_2492929250863743794[10] = 0;
   out_2492929250863743794[11] = 0;
   out_2492929250863743794[12] = 0;
   out_2492929250863743794[13] = 0;
   out_2492929250863743794[14] = 0;
   out_2492929250863743794[15] = 0;
   out_2492929250863743794[16] = 0;
   out_2492929250863743794[17] = 0;
   out_2492929250863743794[18] = 0;
   out_2492929250863743794[19] = 0;
   out_2492929250863743794[20] = 0;
   out_2492929250863743794[21] = 0;
   out_2492929250863743794[22] = 0;
   out_2492929250863743794[23] = 0;
   out_2492929250863743794[24] = 0;
   out_2492929250863743794[25] = 0;
   out_2492929250863743794[26] = 1;
   out_2492929250863743794[27] = 0;
   out_2492929250863743794[28] = 0;
   out_2492929250863743794[29] = 0;
   out_2492929250863743794[30] = 0;
   out_2492929250863743794[31] = 0;
   out_2492929250863743794[32] = 0;
   out_2492929250863743794[33] = 0;
   out_2492929250863743794[34] = 0;
   out_2492929250863743794[35] = 0;
   out_2492929250863743794[36] = 0;
   out_2492929250863743794[37] = 0;
   out_2492929250863743794[38] = 0;
   out_2492929250863743794[39] = 0;
   out_2492929250863743794[40] = 0;
   out_2492929250863743794[41] = 0;
   out_2492929250863743794[42] = 0;
   out_2492929250863743794[43] = 0;
   out_2492929250863743794[44] = 0;
   out_2492929250863743794[45] = 0;
   out_2492929250863743794[46] = 0;
   out_2492929250863743794[47] = 0;
   out_2492929250863743794[48] = 0;
   out_2492929250863743794[49] = 1;
   out_2492929250863743794[50] = 0;
   out_2492929250863743794[51] = 0;
   out_2492929250863743794[52] = 0;
   out_2492929250863743794[53] = 0;
   out_2492929250863743794[54] = 0;
   out_2492929250863743794[55] = 0;
   out_2492929250863743794[56] = 0;
   out_2492929250863743794[57] = 0;
   out_2492929250863743794[58] = 0;
   out_2492929250863743794[59] = 0;
   out_2492929250863743794[60] = 0;
   out_2492929250863743794[61] = 0;
   out_2492929250863743794[62] = 0;
   out_2492929250863743794[63] = 0;
   out_2492929250863743794[64] = 0;
   out_2492929250863743794[65] = 0;
   out_2492929250863743794[66] = 0;
   out_2492929250863743794[67] = 0;
   out_2492929250863743794[68] = 0;
   out_2492929250863743794[69] = 0;
   out_2492929250863743794[70] = 0;
   out_2492929250863743794[71] = 0;
   out_2492929250863743794[72] = 1;
   out_2492929250863743794[73] = 0;
   out_2492929250863743794[74] = 0;
   out_2492929250863743794[75] = 0;
   out_2492929250863743794[76] = 0;
   out_2492929250863743794[77] = 0;
   out_2492929250863743794[78] = 0;
   out_2492929250863743794[79] = 0;
   out_2492929250863743794[80] = 0;
   out_2492929250863743794[81] = 0;
   out_2492929250863743794[82] = 0;
   out_2492929250863743794[83] = 0;
   out_2492929250863743794[84] = 0;
   out_2492929250863743794[85] = 0;
   out_2492929250863743794[86] = 0;
   out_2492929250863743794[87] = 0;
}
void h_13(double *state, double *unused, double *out_3672272796614809703) {
   out_3672272796614809703[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3672272796614809703[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3672272796614809703[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8928872552718057093) {
   out_8928872552718057093[0] = 0;
   out_8928872552718057093[1] = 0;
   out_8928872552718057093[2] = 0;
   out_8928872552718057093[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8928872552718057093[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8928872552718057093[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8928872552718057093[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8928872552718057093[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8928872552718057093[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8928872552718057093[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8928872552718057093[10] = 0;
   out_8928872552718057093[11] = 0;
   out_8928872552718057093[12] = 0;
   out_8928872552718057093[13] = 0;
   out_8928872552718057093[14] = 0;
   out_8928872552718057093[15] = 0;
   out_8928872552718057093[16] = 0;
   out_8928872552718057093[17] = 0;
   out_8928872552718057093[18] = 0;
   out_8928872552718057093[19] = 0;
   out_8928872552718057093[20] = 0;
   out_8928872552718057093[21] = 0;
   out_8928872552718057093[22] = 0;
   out_8928872552718057093[23] = 0;
   out_8928872552718057093[24] = 0;
   out_8928872552718057093[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8928872552718057093[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8928872552718057093[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8928872552718057093[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8928872552718057093[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8928872552718057093[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8928872552718057093[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8928872552718057093[32] = 0;
   out_8928872552718057093[33] = 0;
   out_8928872552718057093[34] = 0;
   out_8928872552718057093[35] = 0;
   out_8928872552718057093[36] = 0;
   out_8928872552718057093[37] = 0;
   out_8928872552718057093[38] = 0;
   out_8928872552718057093[39] = 0;
   out_8928872552718057093[40] = 0;
   out_8928872552718057093[41] = 0;
   out_8928872552718057093[42] = 0;
   out_8928872552718057093[43] = 0;
   out_8928872552718057093[44] = 0;
   out_8928872552718057093[45] = 0;
   out_8928872552718057093[46] = 0;
   out_8928872552718057093[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8928872552718057093[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8928872552718057093[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8928872552718057093[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8928872552718057093[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8928872552718057093[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8928872552718057093[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8928872552718057093[54] = 0;
   out_8928872552718057093[55] = 0;
   out_8928872552718057093[56] = 0;
   out_8928872552718057093[57] = 0;
   out_8928872552718057093[58] = 0;
   out_8928872552718057093[59] = 0;
   out_8928872552718057093[60] = 0;
   out_8928872552718057093[61] = 0;
   out_8928872552718057093[62] = 0;
   out_8928872552718057093[63] = 0;
   out_8928872552718057093[64] = 0;
   out_8928872552718057093[65] = 0;
}
void h_14(double *state, double *unused, double *out_2409868858877289513) {
   out_2409868858877289513[0] = state[10];
   out_2409868858877289513[1] = state[11];
   out_2409868858877289513[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1296462842087355831) {
   out_1296462842087355831[0] = 0;
   out_1296462842087355831[1] = 0;
   out_1296462842087355831[2] = 0;
   out_1296462842087355831[3] = 0;
   out_1296462842087355831[4] = 0;
   out_1296462842087355831[5] = 0;
   out_1296462842087355831[6] = 0;
   out_1296462842087355831[7] = 0;
   out_1296462842087355831[8] = 0;
   out_1296462842087355831[9] = 0;
   out_1296462842087355831[10] = 1;
   out_1296462842087355831[11] = 0;
   out_1296462842087355831[12] = 0;
   out_1296462842087355831[13] = 0;
   out_1296462842087355831[14] = 0;
   out_1296462842087355831[15] = 0;
   out_1296462842087355831[16] = 0;
   out_1296462842087355831[17] = 0;
   out_1296462842087355831[18] = 0;
   out_1296462842087355831[19] = 0;
   out_1296462842087355831[20] = 0;
   out_1296462842087355831[21] = 0;
   out_1296462842087355831[22] = 0;
   out_1296462842087355831[23] = 0;
   out_1296462842087355831[24] = 0;
   out_1296462842087355831[25] = 0;
   out_1296462842087355831[26] = 0;
   out_1296462842087355831[27] = 0;
   out_1296462842087355831[28] = 0;
   out_1296462842087355831[29] = 0;
   out_1296462842087355831[30] = 0;
   out_1296462842087355831[31] = 0;
   out_1296462842087355831[32] = 0;
   out_1296462842087355831[33] = 1;
   out_1296462842087355831[34] = 0;
   out_1296462842087355831[35] = 0;
   out_1296462842087355831[36] = 0;
   out_1296462842087355831[37] = 0;
   out_1296462842087355831[38] = 0;
   out_1296462842087355831[39] = 0;
   out_1296462842087355831[40] = 0;
   out_1296462842087355831[41] = 0;
   out_1296462842087355831[42] = 0;
   out_1296462842087355831[43] = 0;
   out_1296462842087355831[44] = 0;
   out_1296462842087355831[45] = 0;
   out_1296462842087355831[46] = 0;
   out_1296462842087355831[47] = 0;
   out_1296462842087355831[48] = 0;
   out_1296462842087355831[49] = 0;
   out_1296462842087355831[50] = 0;
   out_1296462842087355831[51] = 0;
   out_1296462842087355831[52] = 0;
   out_1296462842087355831[53] = 0;
   out_1296462842087355831[54] = 0;
   out_1296462842087355831[55] = 0;
   out_1296462842087355831[56] = 1;
   out_1296462842087355831[57] = 0;
   out_1296462842087355831[58] = 0;
   out_1296462842087355831[59] = 0;
   out_1296462842087355831[60] = 0;
   out_1296462842087355831[61] = 0;
   out_1296462842087355831[62] = 0;
   out_1296462842087355831[63] = 0;
   out_1296462842087355831[64] = 0;
   out_1296462842087355831[65] = 0;
}
void h_33(double *state, double *unused, double *out_9121223161723803206) {
   out_9121223161723803206[0] = state[16];
   out_9121223161723803206[1] = state[17];
   out_9121223161723803206[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7572492257469230166) {
   out_7572492257469230166[0] = 0;
   out_7572492257469230166[1] = 0;
   out_7572492257469230166[2] = 0;
   out_7572492257469230166[3] = 0;
   out_7572492257469230166[4] = 0;
   out_7572492257469230166[5] = 0;
   out_7572492257469230166[6] = 0;
   out_7572492257469230166[7] = 0;
   out_7572492257469230166[8] = 0;
   out_7572492257469230166[9] = 0;
   out_7572492257469230166[10] = 0;
   out_7572492257469230166[11] = 0;
   out_7572492257469230166[12] = 0;
   out_7572492257469230166[13] = 0;
   out_7572492257469230166[14] = 0;
   out_7572492257469230166[15] = 0;
   out_7572492257469230166[16] = 1;
   out_7572492257469230166[17] = 0;
   out_7572492257469230166[18] = 0;
   out_7572492257469230166[19] = 0;
   out_7572492257469230166[20] = 0;
   out_7572492257469230166[21] = 0;
   out_7572492257469230166[22] = 0;
   out_7572492257469230166[23] = 0;
   out_7572492257469230166[24] = 0;
   out_7572492257469230166[25] = 0;
   out_7572492257469230166[26] = 0;
   out_7572492257469230166[27] = 0;
   out_7572492257469230166[28] = 0;
   out_7572492257469230166[29] = 0;
   out_7572492257469230166[30] = 0;
   out_7572492257469230166[31] = 0;
   out_7572492257469230166[32] = 0;
   out_7572492257469230166[33] = 0;
   out_7572492257469230166[34] = 0;
   out_7572492257469230166[35] = 0;
   out_7572492257469230166[36] = 0;
   out_7572492257469230166[37] = 0;
   out_7572492257469230166[38] = 0;
   out_7572492257469230166[39] = 1;
   out_7572492257469230166[40] = 0;
   out_7572492257469230166[41] = 0;
   out_7572492257469230166[42] = 0;
   out_7572492257469230166[43] = 0;
   out_7572492257469230166[44] = 0;
   out_7572492257469230166[45] = 0;
   out_7572492257469230166[46] = 0;
   out_7572492257469230166[47] = 0;
   out_7572492257469230166[48] = 0;
   out_7572492257469230166[49] = 0;
   out_7572492257469230166[50] = 0;
   out_7572492257469230166[51] = 0;
   out_7572492257469230166[52] = 0;
   out_7572492257469230166[53] = 0;
   out_7572492257469230166[54] = 0;
   out_7572492257469230166[55] = 0;
   out_7572492257469230166[56] = 0;
   out_7572492257469230166[57] = 0;
   out_7572492257469230166[58] = 0;
   out_7572492257469230166[59] = 0;
   out_7572492257469230166[60] = 0;
   out_7572492257469230166[61] = 0;
   out_7572492257469230166[62] = 1;
   out_7572492257469230166[63] = 0;
   out_7572492257469230166[64] = 0;
   out_7572492257469230166[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8848504734180065506) {
  H(in_vec, out_8848504734180065506);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1831232880786325784) {
  err_fun(nom_x, delta_x, out_1831232880786325784);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1821126222288460850) {
  inv_err_fun(nom_x, true_x, out_1821126222288460850);
}
void live_H_mod_fun(double *state, double *out_3908414896028627082) {
  H_mod_fun(state, out_3908414896028627082);
}
void live_f_fun(double *state, double dt, double *out_7892289561224452355) {
  f_fun(state,  dt, out_7892289561224452355);
}
void live_F_fun(double *state, double dt, double *out_8515547901378915655) {
  F_fun(state,  dt, out_8515547901378915655);
}
void live_h_4(double *state, double *unused, double *out_8679006882303680840) {
  h_4(state, unused, out_8679006882303680840);
}
void live_H_4(double *state, double *unused, double *out_5990756093177091639) {
  H_4(state, unused, out_5990756093177091639);
}
void live_h_9(double *state, double *unused, double *out_2409868858877289513) {
  h_9(state, unused, out_2409868858877289513);
}
void live_H_9(double *state, double *unused, double *out_1296462842087355831) {
  H_9(state, unused, out_1296462842087355831);
}
void live_h_10(double *state, double *unused, double *out_120384295002916867) {
  h_10(state, unused, out_120384295002916867);
}
void live_H_10(double *state, double *unused, double *out_3553941899114977873) {
  H_10(state, unused, out_3553941899114977873);
}
void live_h_12(double *state, double *unused, double *out_7598365100289183419) {
  h_12(state, unused, out_7598365100289183419);
}
void live_H_12(double *state, double *unused, double *out_1676372220505358853) {
  H_12(state, unused, out_1676372220505358853);
}
void live_h_35(double *state, double *unused, double *out_2019650774056222022) {
  h_35(state, unused, out_2019650774056222022);
}
void live_H_35(double *state, double *unused, double *out_4421935252830372562) {
  H_35(state, unused, out_4421935252830372562);
}
void live_h_32(double *state, double *unused, double *out_5076051470792844394) {
  h_32(state, unused, out_5076051470792844394);
}
void live_H_32(double *state, double *unused, double *out_2492929250863743794) {
  H_32(state, unused, out_2492929250863743794);
}
void live_h_13(double *state, double *unused, double *out_3672272796614809703) {
  h_13(state, unused, out_3672272796614809703);
}
void live_H_13(double *state, double *unused, double *out_8928872552718057093) {
  H_13(state, unused, out_8928872552718057093);
}
void live_h_14(double *state, double *unused, double *out_2409868858877289513) {
  h_14(state, unused, out_2409868858877289513);
}
void live_H_14(double *state, double *unused, double *out_1296462842087355831) {
  H_14(state, unused, out_1296462842087355831);
}
void live_h_33(double *state, double *unused, double *out_9121223161723803206) {
  h_33(state, unused, out_9121223161723803206);
}
void live_H_33(double *state, double *unused, double *out_7572492257469230166) {
  H_33(state, unused, out_7572492257469230166);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
